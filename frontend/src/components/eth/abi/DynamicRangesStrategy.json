{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        },
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "baseThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "tick",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTwap",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "keeper",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastRebalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastTick",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "limitThreshold",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTwapDeviation",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IUniswapV3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_baseThreshold",
          "type": "int24"
        }
      ],
      "name": "setBaseThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_limitThreshold",
          "type": "int24"
        }
      ],
      "name": "setLimitThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int24",
          "name": "_maxTwapDeviation",
          "type": "int24"
        }
      ],
      "name": "setMaxTwapDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_twapDuration",
          "type": "uint32"
        }
      ],
      "name": "setTwapDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tickSpacing",
      "outputs": [
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "twapDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "contract AlphaVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/Math.sol",
    "1": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "10": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
    "11": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
    "12": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
    "13": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
    "14": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
    "15": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
    "16": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/pool/IUniswapV3PoolState.sol",
    "17": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FixedPoint96.sol",
    "18": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/FullMath.sol",
    "19": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
    "2": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/ERC20.sol",
    "20": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/LiquidityAmounts.sol",
    "21": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-periphery@1.0.0/contracts/libraries/PositionKey.sol",
    "23": "contracts/AlphaVault.sol",
    "24": "contracts/DynamicRangesStrategy.sol",
    "3": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/IERC20.sol",
    "30": "interfaces/IVault.sol",
    "4": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC20/SafeERC20.sol",
    "5": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol",
    "6": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "7": "C:/Users/Alberto/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/ReentrancyGuard.sol",
    "8": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
    "9": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/callback/IUniswapV3MintCallback.sol"
  },
  "ast": {
    "absolutePath": "contracts/DynamicRangesStrategy.sol",
    "exportedSymbols": {
      "Address": [
        7134
      ],
      "AlphaVault": [
        2303
      ],
      "Context": [
        6838
      ],
      "DynamicRangesStrategy": [
        2800
      ],
      "ERC20": [
        5616
      ],
      "FixedPoint96": [
        7144
      ],
      "FullMath": [
        7317
      ],
      "IERC20": [
        5694
      ],
      "IUniswapV3MintCallback": [
        5961
      ],
      "IUniswapV3Pool": [
        4150
      ],
      "IUniswapV3PoolActions": [
        6491
      ],
      "IUniswapV3PoolDerivedState": [
        6522
      ],
      "IUniswapV3PoolEvents": [
        6641
      ],
      "IUniswapV3PoolImmutables": [
        6681
      ],
      "IUniswapV3PoolOwnerActions": [
        6707
      ],
      "IUniswapV3PoolState": [
        6815
      ],
      "IUniswapV3SwapCallback": [
        5975
      ],
      "IVault": [
        6384
      ],
      "LiquidityAmounts": [
        6315
      ],
      "Math": [
        4758
      ],
      "PositionKey": [
        6340
      ],
      "ReentrancyGuard": [
        5947
      ],
      "SafeERC20": [
        5907
      ],
      "SafeMath": [
        5113
      ],
      "TickMath": [
        4685
      ]
    },
    "id": 2801,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2305,
        "literals": [
          "solidity",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:24"
      },
      {
        "absolutePath": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "id": 2306,
        "nodeType": "ImportDirective",
        "scope": 2801,
        "sourceUnit": 4151,
        "src": "63:66:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Alberto/.brownie/packages/Uniswap/uniswap-v3-core@1.0.0/contracts/libraries/TickMath.sol",
        "file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
        "id": 2307,
        "nodeType": "ImportDirective",
        "scope": 2801,
        "sourceUnit": 4686,
        "src": "130:59:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AlphaVault.sol",
        "file": "./AlphaVault.sol",
        "id": 2308,
        "nodeType": "ImportDirective",
        "scope": 2801,
        "sourceUnit": 2304,
        "src": "191:26:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2309,
          "nodeType": "StructuredDocumentation",
          "src": "219:1113:24",
          "text": " @title   Alpha Strategy\n @notice  Rebalancing strategy for Alpha Vault that maintains the two\n          following range orders:\n          1. Base order is placed between X - B and X + B + TS.\n          2. Limit order is placed between X - L and X, or between X + TS\n             and X + L + TS, depending on which token it holds more of.\n          where:\n              X = current tick rounded down to multiple of tick spacing\n              TS = tick spacing\n              B = base threshold\n              L = limit threshold\n          Note that after these two orders, the vault should have deposited\n          all its tokens and should only have a few wei left.\n          Because the limit order tries to sell whichever token the vault\n          holds more of, the vault's holdings will have a tendency to get\n          closer to a 1:1 balance. This enables it to continue providing\n          liquidity without running out of inventory of either token, and\n          achieves this without the need to swap directly on Uniswap and pay\n          fees."
        },
        "fullyImplemented": true,
        "id": 2800,
        "linearizedBaseContracts": [
          2800
        ],
        "name": "DynamicRangesStrategy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fbfa77cf",
            "id": 2311,
            "mutability": "immutable",
            "name": "vault",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1370:33:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AlphaVault_$2303",
              "typeString": "contract AlphaVault"
            },
            "typeName": {
              "id": 2310,
              "name": "AlphaVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2303,
              "src": "1370:10:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                "typeString": "contract AlphaVault"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 2313,
            "mutability": "immutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1409:36:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
              "typeString": "contract IUniswapV3Pool"
            },
            "typeName": {
              "id": 2312,
              "name": "IUniswapV3Pool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4150,
              "src": "1409:14:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                "typeString": "contract IUniswapV3Pool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d0c93a7c",
            "id": 2315,
            "mutability": "immutable",
            "name": "tickSpacing",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1451:34:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 2314,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1451:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87bab9c",
            "id": 2317,
            "mutability": "mutable",
            "name": "baseThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1492:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 2316,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1492:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "16c3e29d",
            "id": 2319,
            "mutability": "mutable",
            "name": "limitThreshold",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1524:27:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 2318,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1524:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e7c7cb91",
            "id": 2321,
            "mutability": "mutable",
            "name": "maxTwapDeviation",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1557:29:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 2320,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1557:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "26d89545",
            "id": 2323,
            "mutability": "mutable",
            "name": "twapDuration",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1592:26:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 2322,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1592:6:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aced1661",
            "id": 2325,
            "mutability": "mutable",
            "name": "keeper",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1624:21:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2324,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1624:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "106b9ca1",
            "id": 2327,
            "mutability": "mutable",
            "name": "lastRebalance",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1652:28:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2326,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1652:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3dfa5d87",
            "id": 2329,
            "mutability": "mutable",
            "name": "lastTick",
            "nodeType": "VariableDeclaration",
            "scope": 2800,
            "src": "1686:21:24",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int24",
              "typeString": "int24"
            },
            "typeName": {
              "id": 2328,
              "name": "int24",
              "nodeType": "ElementaryTypeName",
              "src": "1686:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_int24",
                "typeString": "int24"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2424,
              "nodeType": "Block",
              "src": "2299:676:24",
              "statements": [
                {
                  "assignments": [
                    2346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2346,
                      "mutability": "mutable",
                      "name": "_pool",
                      "nodeType": "VariableDeclaration",
                      "scope": 2424,
                      "src": "2309:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                        "typeString": "contract IUniswapV3Pool"
                      },
                      "typeName": {
                        "id": 2345,
                        "name": "IUniswapV3Pool",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 4150,
                        "src": "2309:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2352,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2348,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2332,
                            "src": "2343:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2347,
                          "name": "AlphaVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2303,
                          "src": "2332:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AlphaVault_$2303_$",
                            "typeString": "type(contract AlphaVault)"
                          }
                        },
                        "id": 2349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2332:18:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlphaVault_$2303",
                          "typeString": "contract AlphaVault"
                        }
                      },
                      "id": 2350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 561,
                      "src": "2332:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IUniswapV3Pool_$4150_$",
                        "typeString": "function () view external returns (contract IUniswapV3Pool)"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:25:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2309:48:24"
                },
                {
                  "assignments": [
                    2354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2354,
                      "mutability": "mutable",
                      "name": "_tickSpacing",
                      "nodeType": "VariableDeclaration",
                      "scope": 2424,
                      "src": "2367:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2353,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2367:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2358,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2355,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2346,
                        "src": "2388:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tickSpacing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6674,
                      "src": "2388:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
                        "typeString": "function () view external returns (int24)"
                      }
                    },
                    "id": 2357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2367:40:24"
                },
                {
                  "expression": {
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2359,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2311,
                      "src": "2418:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2303",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2361,
                          "name": "_vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2332,
                          "src": "2437:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2360,
                        "name": "AlphaVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2303,
                        "src": "2426:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AlphaVault_$2303_$",
                          "typeString": "type(contract AlphaVault)"
                        }
                      },
                      "id": 2362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2426:18:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AlphaVault_$2303",
                        "typeString": "contract AlphaVault"
                      }
                    },
                    "src": "2418:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AlphaVault_$2303",
                      "typeString": "contract AlphaVault"
                    }
                  },
                  "id": 2364,
                  "nodeType": "ExpressionStatement",
                  "src": "2418:26:24"
                },
                {
                  "expression": {
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2365,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2313,
                      "src": "2454:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2366,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "2461:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                        "typeString": "contract IUniswapV3Pool"
                      }
                    },
                    "src": "2454:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:12:24"
                },
                {
                  "expression": {
                    "id": 2371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2369,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "2476:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2370,
                      "name": "_tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2354,
                      "src": "2490:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2476:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2372,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:26:24"
                },
                {
                  "expression": {
                    "id": 2375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2373,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "2513:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2374,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2334,
                      "src": "2529:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2513:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2376,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:30:24"
                },
                {
                  "expression": {
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2377,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "2553:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2378,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2336,
                      "src": "2570:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2553:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "2553:32:24"
                },
                {
                  "expression": {
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2381,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "2595:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2382,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "2614:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "2595:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:36:24"
                },
                {
                  "expression": {
                    "id": 2387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2385,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2323,
                      "src": "2641:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2386,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2340,
                      "src": "2656:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2641:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2388,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:28:24"
                },
                {
                  "expression": {
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2389,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2325,
                      "src": "2679:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2390,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "2688:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2679:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2392,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:16:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2394,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2334,
                        "src": "2722:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2395,
                        "name": "_tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "2738:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 2393,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "2706:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2706:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "2706:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2399,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "2777:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2400,
                        "name": "_tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2354,
                        "src": "2794:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 2398,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "2761:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2761:46:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2402,
                  "nodeType": "ExpressionStatement",
                  "src": "2761:46:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2404,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2338,
                          "src": "2825:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2845:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2825:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2848:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 2403,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2817:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2817:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2409,
                  "nodeType": "ExpressionStatement",
                  "src": "2817:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2411,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2340,
                          "src": "2885:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2901:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2885:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 2414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2904:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 2410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2877:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2877:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2416,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:42:24"
                },
                {
                  "expression": {
                    "id": 2422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 2417,
                          "name": "lastTick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2329,
                          "src": "2933:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 2418,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2930:22:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2419,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2346,
                          "src": "2955:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6728,
                        "src": "2955:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 2421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2955:13:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "2930:38:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2423,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:38:24"
                }
              ]
            },
            "documentation": {
              "id": 2330,
              "nodeType": "StructuredDocumentation",
              "src": "1714:389:24",
              "text": " @param _vault Underlying Alpha Vault\n @param _baseThreshold Used to determine base order range\n @param _limitThreshold Used to determine limit order range\n @param _maxTwapDeviation Max deviation from TWAP during rebalance\n @param _twapDuration TWAP duration in seconds for rebalance check\n @param _keeper Account that can call `rebalance()`"
            },
            "id": 2425,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2332,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2129:14:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2153:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2336,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2183:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2335,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2183:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2338,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2214:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2337,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "2214:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2340,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2247:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2247:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2342,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2425,
                  "src": "2277:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2277:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:179:24"
            },
            "returnParameters": {
              "id": 2344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:24"
            },
            "scope": 2800,
            "src": "2108:867:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2550,
              "nodeType": "Block",
              "src": "3182:1407:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2430,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3200:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3200:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2432,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2325,
                          "src": "3214:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3200:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6b6565706572",
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3222:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        },
                        "value": "keeper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        }
                      ],
                      "id": 2429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3192:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3192:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2436,
                  "nodeType": "ExpressionStatement",
                  "src": "3192:39:24"
                },
                {
                  "assignments": [
                    2438
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2438,
                      "mutability": "mutable",
                      "name": "_baseThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "3242:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2437,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3242:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2440,
                  "initialValue": {
                    "id": 2439,
                    "name": "baseThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2317,
                    "src": "3265:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3242:36:24"
                },
                {
                  "assignments": [
                    2442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2442,
                      "mutability": "mutable",
                      "name": "_limitThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "3288:21:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3288:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2444,
                  "initialValue": {
                    "id": 2443,
                    "name": "limitThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2319,
                    "src": "3312:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3288:38:24"
                },
                {
                  "assignments": [
                    2446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2446,
                      "mutability": "mutable",
                      "name": "tick",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "3493:10:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2445,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3493:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2449,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2447,
                      "name": "getTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2565,
                      "src": "3506:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 2448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3506:9:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3493:22:24"
                },
                {
                  "assignments": [
                    2451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2451,
                      "mutability": "mutable",
                      "name": "maxThreshold",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "3525:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2450,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3525:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2458,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2452,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2438,
                        "src": "3558:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2453,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2442,
                        "src": "3575:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "3558:32:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 2456,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2442,
                      "src": "3610:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3558:67:24",
                    "trueExpression": {
                      "id": 2455,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2438,
                      "src": "3593:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3525:100:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2460,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2446,
                          "src": "3643:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 2464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2461,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4685,
                                "src": "3650:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$4685_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 2462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MIN_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4158,
                              "src": "3650:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 2463,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2451,
                              "src": "3670:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3650:32:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2465,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "3685:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3650:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3643:53:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f206c6f77",
                        "id": 2468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3698:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        },
                        "value": "tick too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2cb156c643e8cd3b45577b85d6b5d19199f42d422facd129dca4f0074689ac99",
                          "typeString": "literal_string \"tick too low\""
                        }
                      ],
                      "id": 2459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3635:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3635:78:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "ExpressionStatement",
                  "src": "3635:78:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2472,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2446,
                          "src": "3731:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            },
                            "id": 2476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2473,
                                "name": "TickMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4685,
                                "src": "3738:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TickMath_$4685_$",
                                  "typeString": "type(library TickMath)"
                                }
                              },
                              "id": 2474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "MAX_TICK",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4163,
                              "src": "3738:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2475,
                              "name": "maxThreshold",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2451,
                              "src": "3758:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int24",
                                "typeString": "int24"
                              }
                            },
                            "src": "3738:32:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2477,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2315,
                            "src": "3773:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "3738:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "3731:53:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b20746f6f2068696768",
                        "id": 2480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3786:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        },
                        "value": "tick too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1098925fe2674faf660232cdefa7e9950f36e5a5c80a9a62da9e887a94f892d7",
                          "typeString": "literal_string \"tick too high\""
                        }
                      ],
                      "id": 2471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3723:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3723:79:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2482,
                  "nodeType": "ExpressionStatement",
                  "src": "3723:79:24"
                },
                {
                  "assignments": [
                    2484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2484,
                      "mutability": "mutable",
                      "name": "twap",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "3996:10:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2483,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2487,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2485,
                      "name": "getTwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2623,
                      "src": "4009:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int24_$",
                        "typeString": "function () view returns (int24)"
                      }
                    },
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4009:9:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3996:22:24"
                },
                {
                  "assignments": [
                    2489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2489,
                      "mutability": "mutable",
                      "name": "deviation",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "4028:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2488,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4028:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2500,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2490,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "4046:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 2491,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "4053:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4046:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2496,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "4074:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2497,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "4081:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4074:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4046:39:24",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2493,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "4060:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 2494,
                        "name": "twap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2484,
                        "src": "4067:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "src": "4060:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4028:57:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2502,
                          "name": "deviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2489,
                          "src": "4103:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 2503,
                          "name": "maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2321,
                          "src": "4116:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4103:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4134:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 2501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4095:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:58:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2507,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:58:24"
                },
                {
                  "assignments": [
                    2509
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2509,
                      "mutability": "mutable",
                      "name": "tickFloor",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "4164:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2508,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4164:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2513,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2511,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2446,
                        "src": "4189:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 2510,
                      "name": "_floor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2655,
                      "src": "4182:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_int24_$returns$_t_int24_$",
                        "typeString": "function (int24) view returns (int24)"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4182:12:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4164:30:24"
                },
                {
                  "assignments": [
                    2515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2515,
                      "mutability": "mutable",
                      "name": "tickCeil",
                      "nodeType": "VariableDeclaration",
                      "scope": 2550,
                      "src": "4204:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2514,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4204:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2519,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2516,
                      "name": "tickFloor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2509,
                      "src": "4221:9:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2517,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "4233:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "4221:23:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4204:40:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 2523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4284:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 2524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4299:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2525,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "4314:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2526,
                          "name": "_baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2438,
                          "src": "4326:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4314:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2528,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2515,
                          "src": "4354:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2529,
                          "name": "_baseThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2438,
                          "src": "4365:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4354:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2531,
                          "name": "tickFloor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2509,
                          "src": "4393:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 2532,
                          "name": "_limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2442,
                          "src": "4405:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4393:27:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2534,
                        "name": "tickFloor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2509,
                        "src": "4434:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2535,
                        "name": "tickCeil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2515,
                        "src": "4457:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2536,
                          "name": "tickCeil",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2515,
                          "src": "4479:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 2537,
                          "name": "_limitThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2442,
                          "src": "4490:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "4479:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "expression": {
                        "id": 2520,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2311,
                        "src": "4255:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AlphaVault_$2303",
                          "typeString": "contract AlphaVault"
                        }
                      },
                      "id": 2522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rebalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1475,
                      "src": "4255:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_uint160_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int256,uint160,int24,int24,int24,int24,int24,int24) external"
                      }
                    },
                    "id": 2539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4255:260:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2540,
                  "nodeType": "ExpressionStatement",
                  "src": "4255:260:24"
                },
                {
                  "expression": {
                    "id": 2544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2541,
                      "name": "lastRebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2327,
                      "src": "4526:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2542,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4542:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4542:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4526:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2545,
                  "nodeType": "ExpressionStatement",
                  "src": "4526:31:24"
                },
                {
                  "expression": {
                    "id": 2548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2546,
                      "name": "lastTick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2329,
                      "src": "4567:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2547,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2446,
                      "src": "4578:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "4567:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2549,
                  "nodeType": "ExpressionStatement",
                  "src": "4567:15:24"
                }
              ]
            },
            "documentation": {
              "id": 2426,
              "nodeType": "StructuredDocumentation",
              "src": "2981:166:24",
              "text": " @notice Calculates new ranges for orders and calls `vault.rebalance()`\n so that vault can update its positions. Can only be called by keeper."
            },
            "functionSelector": "7d7c2a1c",
            "id": 2551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3170:2:24"
            },
            "returnParameters": {
              "id": 2428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:24"
            },
            "scope": 2800,
            "src": "3152:1437:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2564,
              "nodeType": "Block",
              "src": "4710:50:24",
              "statements": [
                {
                  "expression": {
                    "id": 2562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 2557,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2555,
                          "src": "4723:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        null,
                        null,
                        null,
                        null,
                        null
                      ],
                      "id": 2558,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4720:18:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
                        "typeString": "tuple(,int24,,,,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2559,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2313,
                          "src": "4741:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                            "typeString": "contract IUniswapV3Pool"
                          }
                        },
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "slot0",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6728,
                        "src": "4741:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                          "typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
                        }
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4741:12:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
                        "typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
                      }
                    },
                    "src": "4720:33:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2563,
                  "nodeType": "ExpressionStatement",
                  "src": "4720:33:24"
                }
              ]
            },
            "documentation": {
              "id": 2552,
              "nodeType": "StructuredDocumentation",
              "src": "4595:58:24",
              "text": "@dev Fetches current price in ticks from Uniswap pool."
            },
            "functionSelector": "df8ad814",
            "id": 2565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTick",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:2:24"
            },
            "returnParameters": {
              "id": 2556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 2565,
                  "src": "4698:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4697:12:24"
            },
            "scope": 2800,
            "src": "4658:102:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2622,
              "nodeType": "Block",
              "src": "4890:325:24",
              "statements": [
                {
                  "assignments": [
                    2572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2572,
                      "mutability": "mutable",
                      "name": "_twapDuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 2622,
                      "src": "4900:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2571,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4900:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2574,
                  "initialValue": {
                    "id": 2573,
                    "name": "twapDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2323,
                    "src": "4923:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4900:35:24"
                },
                {
                  "assignments": [
                    2579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2579,
                      "mutability": "mutable",
                      "name": "secondsAgo",
                      "nodeType": "VariableDeclaration",
                      "scope": 2622,
                      "src": "4945:26:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2577,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4945:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2578,
                        "nodeType": "ArrayTypeName",
                        "src": "4945:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2585,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4987:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 2582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4974:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2580,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4978:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2581,
                        "nodeType": "ArrayTypeName",
                        "src": "4978:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 2584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4974:15:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4945:44:24"
                },
                {
                  "expression": {
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2586,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "4999:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 2588,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 2587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5010:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4999:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2589,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2572,
                      "src": "5015:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4999:29:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2591,
                  "nodeType": "ExpressionStatement",
                  "src": "4999:29:24"
                },
                {
                  "expression": {
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2592,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "5038:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 2594,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 2593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5049:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5038:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5054:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5038:17:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "5038:17:24"
                },
                {
                  "assignments": [
                    2602,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2602,
                      "mutability": "mutable",
                      "name": "tickCumulatives",
                      "nodeType": "VariableDeclaration",
                      "scope": 2622,
                      "src": "5067:30:24",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2600,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "5067:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 2601,
                        "nodeType": "ArrayTypeName",
                        "src": "5067:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2605,
                        "name": "secondsAgo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "5116:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "id": 2603,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2313,
                        "src": "5103:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$4150",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 2604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6507,
                      "src": "5103:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 2606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5103:24:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5066:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              },
                              "id": 2616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2610,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2602,
                                  "src": "5151:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 2612,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 2611,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5167:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5151:18:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 2613,
                                  "name": "tickCumulatives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2602,
                                  "src": "5172:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                                    "typeString": "int56[] memory"
                                  }
                                },
                                "id": 2615,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 2614,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5188:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5172:18:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int56",
                                  "typeString": "int56"
                                }
                              },
                              "src": "5151:39:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              }
                            }
                          ],
                          "id": 2617,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5150:41:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 2618,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2572,
                          "src": "5194:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "5150:57:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 2609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5144:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 2608,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5144:5:24",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5144:64:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 2570,
                  "id": 2621,
                  "nodeType": "Return",
                  "src": "5137:71:24"
                }
              ]
            },
            "documentation": {
              "id": 2566,
              "nodeType": "StructuredDocumentation",
              "src": "4766:72:24",
              "text": "@dev Fetches time-weighted average price in ticks from Uniswap pool."
            },
            "functionSelector": "5d752a9a",
            "id": 2623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTwap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4859:2:24"
            },
            "returnParameters": {
              "id": 2570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2569,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2623,
                  "src": "4883:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2568,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4882:7:24"
            },
            "scope": 2800,
            "src": "4843:372:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2654,
              "nodeType": "Block",
              "src": "5385:158:24",
              "statements": [
                {
                  "assignments": [
                    2632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2632,
                      "mutability": "mutable",
                      "name": "compressed",
                      "nodeType": "VariableDeclaration",
                      "scope": 2654,
                      "src": "5395:16:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 2631,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5395:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2636,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 2635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2633,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2626,
                      "src": "5414:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 2634,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "5421:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5414:18:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5395:37:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2637,
                        "name": "tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2626,
                        "src": "5446:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5453:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5446:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "id": 2644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2640,
                          "name": "tick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2626,
                          "src": "5458:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "id": 2641,
                          "name": "tickSpacing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2315,
                          "src": "5465:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5458:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5480:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5458:23:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5446:35:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2649,
                  "nodeType": "IfStatement",
                  "src": "5442:53:24",
                  "trueBody": {
                    "expression": {
                      "id": 2647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "5483:12:24",
                      "subExpression": {
                        "id": 2646,
                        "name": "compressed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2632,
                        "src": "5483:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "id": 2648,
                    "nodeType": "ExpressionStatement",
                    "src": "5483:12:24"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2650,
                      "name": "compressed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "5512:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2651,
                      "name": "tickSpacing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2315,
                      "src": "5525:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "5512:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "functionReturnParameters": 2630,
                  "id": 2653,
                  "nodeType": "Return",
                  "src": "5505:31:24"
                }
              ]
            },
            "documentation": {
              "id": 2624,
              "nodeType": "StructuredDocumentation",
              "src": "5221:101:24",
              "text": "@dev Rounds tick down towards negative infinity so that it's a multiple\n of `tickSpacing`."
            },
            "id": 2655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_floor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2626,
                  "mutability": "mutable",
                  "name": "tick",
                  "nodeType": "VariableDeclaration",
                  "scope": 2655,
                  "src": "5343:10:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2625,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5343:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5342:12:24"
            },
            "returnParameters": {
              "id": 2630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2629,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2655,
                  "src": "5378:5:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2628,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5378:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5377:7:24"
            },
            "scope": 2800,
            "src": "5327:216:24",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2686,
              "nodeType": "Block",
              "src": "5625:202:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2663,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2657,
                          "src": "5643:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5655:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5643:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c64203e2030",
                        "id": 2666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5658:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        },
                        "value": "threshold > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df0fb30611522b7d3d493d2ba0f45b0b93bc4a4d756948f06feb03ce263eb5ea",
                          "typeString": "literal_string \"threshold > 0\""
                        }
                      ],
                      "id": 2662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5635:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5635:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2668,
                  "nodeType": "ExpressionStatement",
                  "src": "5635:39:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2670,
                          "name": "threshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2657,
                          "src": "5692:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2671,
                            "name": "TickMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4685,
                            "src": "5705:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TickMath_$4685_$",
                              "typeString": "type(library TickMath)"
                            }
                          },
                          "id": 2672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "MAX_TICK",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4163,
                          "src": "5705:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "src": "5692:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c6420746f6f2068696768",
                        "id": 2674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5724:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        },
                        "value": "threshold too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e07434090274a7b8a40b387d12d4995efc5241fc0eba573044505275ac4c6f",
                          "typeString": "literal_string \"threshold too high\""
                        }
                      ],
                      "id": 2669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5684:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5684:61:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2676,
                  "nodeType": "ExpressionStatement",
                  "src": "5684:61:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          },
                          "id": 2680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2678,
                            "name": "threshold",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2657,
                            "src": "5763:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 2679,
                            "name": "_tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2659,
                            "src": "5775:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "src": "5763:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5791:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5763:29:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468726573686f6c642025207469636b53706163696e67",
                        "id": 2683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5794:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        },
                        "value": "threshold % tickSpacing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17d46e051321492bc0005d031877507de1a7bdc865b1b762f49073fc9fc9aae5",
                          "typeString": "literal_string \"threshold % tickSpacing\""
                        }
                      ],
                      "id": 2677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5755:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:65:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2685,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:65:24"
                }
              ]
            },
            "id": 2687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2657,
                  "mutability": "mutable",
                  "name": "threshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2687,
                  "src": "5574:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2656,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5574:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2659,
                  "mutability": "mutable",
                  "name": "_tickSpacing",
                  "nodeType": "VariableDeclaration",
                  "scope": 2687,
                  "src": "5591:18:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5591:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5573:37:24"
            },
            "returnParameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5625:0:24"
            },
            "scope": 2800,
            "src": "5549:278:24",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2698,
              "nodeType": "Block",
              "src": "5893:33:24",
              "statements": [
                {
                  "expression": {
                    "id": 2696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2694,
                      "name": "keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2325,
                      "src": "5903:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2695,
                      "name": "_keeper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2689,
                      "src": "5912:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5903:16:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2697,
                  "nodeType": "ExpressionStatement",
                  "src": "5903:16:24"
                }
              ]
            },
            "functionSelector": "748747e6",
            "id": 2699,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2692,
                "modifierName": {
                  "id": 2691,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2786,
                  "src": "5878:14:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5878:14:24"
              }
            ],
            "name": "setKeeper",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "mutability": "mutable",
                  "name": "_keeper",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "5852:15:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5852:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5851:17:24"
            },
            "returnParameters": {
              "id": 2693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5893:0:24"
            },
            "scope": 2800,
            "src": "5833:93:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2715,
              "nodeType": "Block",
              "src": "6000:101:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2707,
                        "name": "_baseThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2701,
                        "src": "6026:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2708,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "6042:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 2706,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "6010:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 2709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6010:44:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2710,
                  "nodeType": "ExpressionStatement",
                  "src": "6010:44:24"
                },
                {
                  "expression": {
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2711,
                      "name": "baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2317,
                      "src": "6064:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2712,
                      "name": "_baseThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2701,
                      "src": "6080:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6064:30:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2714,
                  "nodeType": "ExpressionStatement",
                  "src": "6064:30:24"
                }
              ]
            },
            "functionSelector": "a6329355",
            "id": 2716,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2704,
                "modifierName": {
                  "id": 2703,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2799,
                  "src": "5989:10:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5989:10:24"
              }
            ],
            "name": "setBaseThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2701,
                  "mutability": "mutable",
                  "name": "_baseThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "5958:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2700,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "5958:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5957:22:24"
            },
            "returnParameters": {
              "id": 2705,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6000:0:24"
            },
            "scope": 2800,
            "src": "5932:169:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2732,
              "nodeType": "Block",
              "src": "6177:104:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2724,
                        "name": "_limitThreshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2718,
                        "src": "6203:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "id": 2725,
                        "name": "tickSpacing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2315,
                        "src": "6220:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      ],
                      "id": 2723,
                      "name": "_checkThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "6187:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_int24_$returns$__$",
                        "typeString": "function (int24,int24) pure"
                      }
                    },
                    "id": 2726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:45:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2727,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:45:24"
                },
                {
                  "expression": {
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2728,
                      "name": "limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "6242:14:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2729,
                      "name": "_limitThreshold",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2718,
                      "src": "6259:15:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6242:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2731,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:32:24"
                }
              ]
            },
            "functionSelector": "af794480",
            "id": 2733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2721,
                "modifierName": {
                  "id": 2720,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2799,
                  "src": "6166:10:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6166:10:24"
              }
            ],
            "name": "setLimitThreshold",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2718,
                  "mutability": "mutable",
                  "name": "_limitThreshold",
                  "nodeType": "VariableDeclaration",
                  "scope": 2733,
                  "src": "6134:21:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2717,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6134:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6133:23:24"
            },
            "returnParameters": {
              "id": 2722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6177:0:24"
            },
            "scope": 2800,
            "src": "6107:174:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2751,
              "nodeType": "Block",
              "src": "6365:113:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        "id": 2743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2741,
                          "name": "_maxTwapDeviation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2735,
                          "src": "6383:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6403:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6383:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d617854776170446576696174696f6e",
                        "id": 2744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6406:18:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        },
                        "value": "maxTwapDeviation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d160bfaa4aba2713e87cf9531d75e5854325fb2a3da5b46b19855de96c8ecb",
                          "typeString": "literal_string \"maxTwapDeviation\""
                        }
                      ],
                      "id": 2740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6375:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6375:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2746,
                  "nodeType": "ExpressionStatement",
                  "src": "6375:50:24"
                },
                {
                  "expression": {
                    "id": 2749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2747,
                      "name": "maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2321,
                      "src": "6435:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2748,
                      "name": "_maxTwapDeviation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2735,
                      "src": "6454:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      }
                    },
                    "src": "6435:36:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "id": 2750,
                  "nodeType": "ExpressionStatement",
                  "src": "6435:36:24"
                }
              ]
            },
            "functionSelector": "3cbff3fe",
            "id": 2752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2738,
                "modifierName": {
                  "id": 2737,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2786,
                  "src": "6350:14:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6350:14:24"
              }
            ],
            "name": "setMaxTwapDeviation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2735,
                  "mutability": "mutable",
                  "name": "_maxTwapDeviation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2752,
                  "src": "6316:23:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int24",
                    "typeString": "int24"
                  },
                  "typeName": {
                    "id": 2734,
                    "name": "int24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6316:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6315:25:24"
            },
            "returnParameters": {
              "id": 2739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6365:0:24"
            },
            "scope": 2800,
            "src": "6287:191:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2770,
              "nodeType": "Block",
              "src": "6555:97:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 2762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2760,
                          "name": "_twapDuration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2754,
                          "src": "6573:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6589:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6573:17:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "747761704475726174696f6e",
                        "id": 2763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6592:14:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        },
                        "value": "twapDuration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fd52542bf3f1f951f4efdc0d0cbd9bf7fffec11335f425662b1b4990d30f36",
                          "typeString": "literal_string \"twapDuration\""
                        }
                      ],
                      "id": 2759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6565:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6565:42:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2765,
                  "nodeType": "ExpressionStatement",
                  "src": "6565:42:24"
                },
                {
                  "expression": {
                    "id": 2768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2766,
                      "name": "twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2323,
                      "src": "6617:12:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2767,
                      "name": "_twapDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2754,
                      "src": "6632:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "6617:28:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 2769,
                  "nodeType": "ExpressionStatement",
                  "src": "6617:28:24"
                }
              ]
            },
            "functionSelector": "c433c80a",
            "id": 2771,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2757,
                "modifierName": {
                  "id": 2756,
                  "name": "onlyGovernance",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2786,
                  "src": "6540:14:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6540:14:24"
              }
            ],
            "name": "setTwapDuration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2754,
                  "mutability": "mutable",
                  "name": "_twapDuration",
                  "nodeType": "VariableDeclaration",
                  "scope": 2771,
                  "src": "6509:20:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 2753,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6509:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6508:22:24"
            },
            "returnParameters": {
              "id": 2758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6555:0:24"
            },
            "scope": 2800,
            "src": "6484:168:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2785,
              "nodeType": "Block",
              "src": "6737:83:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2775,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6755:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6755:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2777,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "6769:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AlphaVault_$2303",
                                "typeString": "contract AlphaVault"
                              }
                            },
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 575,
                            "src": "6769:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6769:18:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6755:32:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "676f7665726e616e6365",
                        "id": 2781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6789:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        },
                        "value": "governance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abea6fd3db56a6e6d0242111b43ebb13d1c42709651c032c7894962023a1f90a",
                          "typeString": "literal_string \"governance\""
                        }
                      ],
                      "id": 2774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6747:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:55:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2783,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:55:24"
                },
                {
                  "id": 2784,
                  "nodeType": "PlaceholderStatement",
                  "src": "6812:1:24"
                }
              ]
            },
            "documentation": {
              "id": 2772,
              "nodeType": "StructuredDocumentation",
              "src": "6658:50:24",
              "text": "@dev Uses same governance as underlying vault."
            },
            "id": 2786,
            "name": "onlyGovernance",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6737:0:24"
            },
            "src": "6713:107:24",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2798,
              "nodeType": "Block",
              "src": "6897:67:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2790,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6915:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6915:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2792,
                          "name": "keeper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2325,
                          "src": "6929:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6915:20:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6b6565706572",
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6937:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        },
                        "value": "keeper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7828e9d3df82e69351d51b8c7a93dbe8a71fecfc70c9ab6c998b4a0105e7f8a7",
                          "typeString": "literal_string \"keeper\""
                        }
                      ],
                      "id": 2789,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6907:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6907:39:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2796,
                  "nodeType": "ExpressionStatement",
                  "src": "6907:39:24"
                },
                {
                  "id": 2797,
                  "nodeType": "PlaceholderStatement",
                  "src": "6956:1:24"
                }
              ]
            },
            "documentation": {
              "id": 2787,
              "nodeType": "StructuredDocumentation",
              "src": "6826:46:24",
              "text": "@dev Uses same keeper as underlying vault."
            },
            "id": 2799,
            "name": "onlyKeeper",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6897:0:24"
            },
            "src": "6877:87:24",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2801,
        "src": "1333:5633:24"
      }
    ],
    "src": "39:6928:24"
  },
  "bytecode": "60e06040523480156200001157600080fd5b506040516200154738038062001547833981810160405260c08110156200003757600080fd5b5080516020808301516040808501516060860151608087015160a09097015183516316f0115b60e01b8152935196979496929591949390926000926001600160a01b038a16926316f0115b9260048083019392829003018186803b1580156200009f57600080fd5b505afa158015620000b4573d6000803e3d6000fd5b505050506040513d6020811015620000cb57600080fd5b5051604080516334324e9f60e21b815290519192506000916001600160a01b0384169163d0c93a7c916004808301926020929190829003018186803b1580156200011457600080fd5b505afa15801562000129573d6000803e3d6000fd5b505050506040513d60208110156200014057600080fd5b81019080805190602001909291905050509050876001600160a01b03166080816001600160a01b031660601b81525050816001600160a01b031660a0816001600160a01b031660601b815250508060020b60c08160020b60e81b81525050866000806101000a81548162ffffff021916908360020b62ffffff16021790555085600060036101000a81548162ffffff021916908360020b62ffffff16021790555084600060066101000a81548162ffffff021916908360020b62ffffff16021790555083600060096101000a81548163ffffffff021916908363ffffffff16021790555082600160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506200025d87826200039760201b60201c565b62000269868262000397565b60008560020b13620002b5576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60008463ffffffff161162000300576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156200033a57600080fd5b505afa1580156200034f573d6000803e3d6000fd5b505050506040513d60e08110156200036657600080fd5b50602001516003805460029290920b62ffffff1662ffffff19909216919091179055506200049d9650505050505050565b60008260020b13620003e0576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600283900b131562000432576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8260020b816200044257fe5b0760020b1562000499576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b5050565b60805160601c60a05160601c60c05160e81c61102e620005196000398061085252806108c352806109f45280610b285280610bd15280610d635280610e505280610e905280610ed05250806102a452806104d15280610d895250806102db52806106e25280610a555280610c1f5280610e29525061102e6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063a6329355116100a2578063c433c80a11610071578063c433c80a14610249578063d0c93a7c1461026c578063df8ad81414610274578063e7c7cb911461027c578063fbfa77cf1461028457610116565b8063a6329355146101f9578063a87bab9c14610219578063aced166114610221578063af7944801461022957610116565b80633cbff3fe116100e95780633cbff3fe146101995780633dfa5d87146101bb5780635d752a9a146101c3578063748747e6146101cb5780637d7c2a1c146101f157610116565b8063106b9ca11461011b57806316c3e29d1461013557806316f0115b1461015457806326d8954514610178575b600080fd5b61012361028c565b60408051918252519081900360200190f35b61013d610292565b6040805160029290920b8252519081900360200190f35b61015c6102a2565b604080516001600160a01b039092168252519081900360200190f35b6101806102c6565b6040805163ffffffff9092168252519081900360200190f35b6101b9600480360360208110156101af57600080fd5b503560020b6102d9565b005b61013d610420565b61013d610429565b6101b9600480360360208110156101e157600080fd5b50356001600160a01b03166106e0565b6101b96107d0565b6101b96004803603602081101561020f57600080fd5b503560020b610ada565b61013d610b6b565b61015c610b74565b6101b96004803603602081101561023f57600080fd5b503560020b610b83565b6101b96004803603602081101561025f57600080fd5b503563ffffffff16610c1d565b61013d610d61565b61013d610d85565b61013d610e14565b61015c610e27565b60025481565b6000546301000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b600054600160481b900463ffffffff1681565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d602081101561035c57600080fd5b50516001600160a01b031633146103a7576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008160020b136103f2576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b6000805460029290920b62ffffff1666010000000000000268ffffff00000000000019909216919091179055565b60035460020b81565b60008054604080516002808252606082018352600160481b90930463ffffffff16928492602083019080368337019050509050818160008151811061046a57fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061049357fe5b63ffffffff90921660209283029190910182015260405163883bdbfd60e01b8152600481018281528351602483015283516000936001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169363883bdbfd938793909283926044019185820191028083838b5b8381101561052457818101518382015260200161050c565b505050509050019250505060006040518083038186803b15801561054757600080fd5b505afa15801561055b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604090815281101561058457600080fd5b81019080805160405193929190846401000000008211156105a457600080fd5b9083019060208201858111156105b957600080fd5b82518660208202830111640100000000821117156105d657600080fd5b82525081516020918201928201910280838360005b838110156106035781810151838201526020016105eb565b505050509050016040526020018051604051939291908464010000000082111561062c57600080fd5b90830190602082018581111561064157600080fd5b825186602082028301116401000000008211171561065e57600080fd5b82525081516020918201928201910280838360005b8381101561068b578181015183820152602001610673565b505050509050016040525050505090508263ffffffff16816000815181106106af57fe5b6020026020010151826001815181106106c457fe5b60200260200101510360060b816106d757fe5b05935050505090565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b15801561073957600080fd5b505afa15801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50516001600160a01b031633146107ae576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b03163314610818576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b60008054600281810b926301000000909204900b90610835610d85565b905060008260020b8460020b1361084c578261084e565b835b90507f000000000000000000000000000000000000000000000000000000000000000081620d89e719010160020b8260020b136108c1576040805162461bcd60e51b815260206004820152600c60248201526b7469636b20746f6f206c6f7760a01b604482015290519081900360640190fd5b7f000000000000000000000000000000000000000000000000000000000000000081620d89e719600003030360020b8260020b12610936576040805162461bcd60e51b815260206004820152600d60248201526c0e8d2c6d640e8dede40d0d2ced609b1b604482015290519081900360640190fd5b6000610940610429565b905060008160020b8460020b136109595783820361095d565b8184035b9050600060069054906101000a900460020b60020b8160020b13156109bc576040805162461bcd60e51b815260206004820152601060248201526f36b0bc2a3bb0b82232bb34b0ba34b7b760811b604482015290519081900360640190fd5b60006109c785610e4b565b604080516387e5e08360e01b8152600060048201819052602482018190528a8403600290810b60448401527f000000000000000000000000000000000000000000000000000000000000000085018c8101820b60648501528b8603820b608485015285820b60a485015280820b60c48501528b810190910b60e4840152925193945091926001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926387e5e08392610104808201939182900301818387803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b50504260029081556003805462ffffff191662ffffff9a90920b9990991617909755505050505050505050565b6001546001600160a01b03163314610b22576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b610b4c817f0000000000000000000000000000000000000000000000000000000000000000610ef6565b6000805460029290920b62ffffff1662ffffff19909216919091179055565b60005460020b81565b6001546001600160a01b031681565b6001546001600160a01b03163314610bcb576040805162461bcd60e51b815260206004820152600660248201526535b2b2b832b960d11b604482015290519081900360640190fd5b610bf5817f0000000000000000000000000000000000000000000000000000000000000000610ef6565b6000805460029290920b62ffffff1663010000000265ffffff00000019909216919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7657600080fd5b505afa158015610c8a573d6000803e3d6000fd5b505050506040513d6020811015610ca057600080fd5b50516001600160a01b03163314610ceb576040805162461bcd60e51b815260206004820152600a602482015269676f7665726e616e636560b01b604482015290519081900360640190fd5b60008163ffffffff1611610d35576040805162461bcd60e51b815260206004820152600c60248201526b3a3bb0b8223ab930ba34b7b760a11b604482015290519081900360640190fd5b6000805463ffffffff909216600160481b026cffffffff00000000000000000019909216919091179055565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610de057600080fd5b505afa158015610df4573d6000803e3d6000fd5b505050506040513d60e0811015610e0a57600080fd5b5060200151919050565b6000546601000000000000900460020b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000807f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610e7d57fe5b05905060008360020b128015610ec457507f000000000000000000000000000000000000000000000000000000000000000060020b8360020b81610ebd57fe5b0760020b15155b15610ece57600019015b7f00000000000000000000000000000000000000000000000000000000000000000292915050565b60008260020b13610f3e576040805162461bcd60e51b815260206004820152600d60248201526c07468726573686f6c64203e203609c1b604482015290519081900360640190fd5b620d89e8600283900b1315610f8f576040805162461bcd60e51b81526020600482015260126024820152710e8d0e4cae6d0ded8c840e8dede40d0d2ced60731b604482015290519081900360640190fd5b8060020b8260020b81610f9e57fe5b0760020b15610ff4576040805162461bcd60e51b815260206004820152601760248201527f7468726573686f6c642025207469636b53706163696e67000000000000000000604482015290519081900360640190fd5b505056fea2646970667358221220bc6b7b4c900b93ca75f32a702491c0d0f9df08e539879d7565d2653c267b633864736f6c63430007060033",
  "bytecodeSha1": "8378d5b611eb05a25ec2345cfb961c8786c4427c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "DynamicRangesStrategy",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "23": {},
      "24": {
        "DynamicRangesStrategy._checkThreshold": {
          "35": [
            5643,
            5656,
            true
          ],
          "36": [
            5692,
            5722,
            true
          ],
          "37": [
            5763,
            5792,
            true
          ]
        },
        "DynamicRangesStrategy._floor": {
          "33": [
            5446,
            5454,
            false
          ],
          "34": [
            5458,
            5481,
            false
          ]
        },
        "DynamicRangesStrategy.rebalance": {
          "26": [
            3200,
            3220,
            true
          ],
          "27": [
            3558,
            3590,
            true
          ],
          "28": [
            3643,
            3696,
            true
          ],
          "29": [
            3731,
            3784,
            true
          ],
          "30": [
            4046,
            4057,
            true
          ],
          "31": [
            4103,
            4132,
            true
          ]
        },
        "DynamicRangesStrategy.setMaxTwapDeviation": {
          "25": [
            6383,
            6404,
            true
          ]
        },
        "DynamicRangesStrategy.setTwapDuration": {
          "32": [
            6573,
            6590,
            true
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {},
      "1": {},
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {},
      "17": {},
      "18": {},
      "19": {},
      "2": {},
      "20": {},
      "21": {},
      "23": {},
      "24": {
        "DynamicRangesStrategy._checkThreshold": {
          "22": [
            5635,
            5674
          ],
          "23": [
            5684,
            5745
          ],
          "24": [
            5755,
            5820
          ]
        },
        "DynamicRangesStrategy._floor": {
          "20": [
            5483,
            5495
          ],
          "21": [
            5505,
            5536
          ]
        },
        "DynamicRangesStrategy.getTick": {
          "19": [
            4720,
            4753
          ]
        },
        "DynamicRangesStrategy.getTwap": {
          "2": [
            4999,
            5028
          ],
          "3": [
            5038,
            5055
          ],
          "4": [
            5137,
            5208
          ]
        },
        "DynamicRangesStrategy.rebalance": {
          "6": [
            3192,
            3231
          ],
          "7": [
            3635,
            3713
          ],
          "8": [
            3723,
            3802
          ],
          "9": [
            4095,
            4153
          ],
          "10": [
            4255,
            4515
          ],
          "11": [
            4526,
            4557
          ],
          "12": [
            4567,
            4582
          ]
        },
        "DynamicRangesStrategy.setBaseThreshold": {
          "13": [
            6010,
            6054
          ],
          "14": [
            6064,
            6094
          ]
        },
        "DynamicRangesStrategy.setKeeper": {
          "5": [
            5903,
            5919
          ]
        },
        "DynamicRangesStrategy.setLimitThreshold": {
          "15": [
            6187,
            6232
          ],
          "16": [
            6242,
            6274
          ]
        },
        "DynamicRangesStrategy.setMaxTwapDeviation": {
          "0": [
            6375,
            6425
          ],
          "1": [
            6435,
            6471
          ]
        },
        "DynamicRangesStrategy.setTwapDuration": {
          "17": [
            6565,
            6607
          ],
          "18": [
            6617,
            6645
          ]
        }
      },
      "3": {},
      "30": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "AlphaVault",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC20",
    "Uniswap/uniswap-v3-core@1.0.0/FixedPoint96",
    "Uniswap/uniswap-v3-core@1.0.0/FullMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC20",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3MintCallback",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3Pool",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolDerivedState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolEvents",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolImmutables",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolOwnerActions",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3PoolState",
    "Uniswap/uniswap-v3-core@1.0.0/IUniswapV3SwapCallback",
    "IVault",
    "Uniswap/uniswap-v3-periphery@1.0.0/LiquidityAmounts",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Math",
    "Uniswap/uniswap-v3-periphery@1.0.0/PositionKey",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "Uniswap/uniswap-v3-core@1.0.0/TickMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "1333:5633:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:28;;;:::i;:::-;;;;;;;;;;;;;;;;1524:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1409:36;;;:::i;:::-;;;;-1:-1:-1;;;;;1409:36:24;;;;;;;;;;;;;;1592:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6287:191;;;;;;;;;;;;;;;;-1:-1:-1;6287:191:24;;;;:::i;:::-;;1686:21;;;:::i;4843:372::-;;;:::i;5833:93::-;;;;;;;;;;;;;;;;-1:-1:-1;5833:93:24;-1:-1:-1;;;;;5833:93:24;;:::i;3152:1437::-;;;:::i;5932:169::-;;;;;;;;;;;;;;;;-1:-1:-1;5932:169:24;;;;:::i;1492:26::-;;;:::i;1624:21::-;;;:::i;6107:174::-;;;;;;;;;;;;;;;;-1:-1:-1;6107:174:24;;;;:::i;6484:168::-;;;;;;;;;;;;;;;;-1:-1:-1;6484:168:24;;;;:::i;1451:34::-;;;:::i;4658:102::-;;;:::i;1557:29::-;;;:::i;1370:33::-;;;:::i;1652:28::-;;;;:::o;1524:27::-;;;;;;;;;:::o;1409:36::-;;;:::o;1592:26::-;;;-1:-1:-1;;;1592:26:24;;;;;:::o;6287:191::-;6769:5;-1:-1:-1;;;;;6769:16:24;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:24;-1:-1:-1;;;;;6755:32:24;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;;;;6403:1:::1;6383:17;:21;;;6375:50;;;::::0;;-1:-1:-1;;;6375:50:24;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6375:50:24;;;;;;;;;;;;;::::1;;6435:16;:36:::0;;::::1;::::0;;;::::1;;;::::0;::::1;-1:-1:-1::0;;6435:36:24;;::::1;::::0;;;::::1;::::0;;6287:191::o;1686:21::-;;;;;;:::o;4843:372::-;4883:5;4923:12;;4974:15;;;4987:1;4974:15;;;;;;;;-1:-1:-1;;;4923:12:24;;;;;;4883:5;;4974:15;;;;;;;;;;-1:-1:-1;4974:15:24;4945:44;;5015:13;4999:10;5010:1;4999:13;;;;;;;;;;;;;:29;;;;;;;;;;;5054:1;5038:10;5049:1;5038:13;;;;;;;;:17;;;;:13;;;;;;;;;;:17;5103:24;;-1:-1:-1;;;5103:24:24;;;;;;;;;;;;;;;;5067:30;;-1:-1:-1;;;;;5103:4:24;:12;;;;5116:10;;5103:24;;;;;;;;;;;;;;;5067:30;5103:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5103:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5103:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5103:24:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5066:61;;;5194:13;5150:57;;5172:15;5188:1;5172:18;;;;;;;;;;;;;;5151:15;5167:1;5151:18;;;;;;;;;;;;;;:39;5150:57;;;;;;;;5137:71;;;;;4843:372;:::o;5833:93::-;6769:5;-1:-1:-1;;;;;6769:16:24;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:24;-1:-1:-1;;;;;6755:32:24;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;;;;5903:6:::1;:16:::0;;-1:-1:-1;;;;;;5903:16:24::1;-1:-1:-1::0;;;;;5903:16:24;;;::::1;::::0;;;::::1;::::0;;5833:93::o;3152:1437::-;3214:6;;-1:-1:-1;;;;;3214:6:24;3200:10;:20;3192:39;;;;;-1:-1:-1;;;3192:39:24;;;;;;;;;;;;-1:-1:-1;;;3192:39:24;;;;;;;;;;;;;;;3242:20;3265:13;;;;;;;3312:14;;;;;;;3506:9;:7;:9::i;:::-;3493:22;;3525:18;3575:15;3558:32;;:14;:32;;;:67;;3610:15;3558:67;;;3593:14;3558:67;3525:100;;3685:11;3670:12;-1:-1:-1;;3650:32:24;:46;3643:53;;:4;:53;;;3635:78;;;;;-1:-1:-1;;;3635:78:24;;;;;;;;;;;;-1:-1:-1;;;3635:78:24;;;;;;;;;;;;;;;3773:11;3758:12;-1:-1:-1;;637:9:19;;3738:32:24;:46;3731:53;;:4;:53;;;3723:79;;;;;-1:-1:-1;;;3723:79:24;;;;;;;;;;;;-1:-1:-1;;;3723:79:24;;;;;;;;;;;;;;;3996:10;4009:9;:7;:9::i;:::-;3996:22;;4028:15;4053:4;4046:11;;:4;:11;;;:39;;4081:4;4074;:11;4046:39;;;4067:4;4060;:11;4046:39;4028:57;;4116:16;;;;;;;;;;;4103:29;;:9;:29;;;;4095:58;;;;;-1:-1:-1;;;4095:58:24;;;;;;;;;;;;-1:-1:-1;;;4095:58:24;;;;;;;;;;;;;;;4164:15;4182:12;4189:4;4182:6;:12::i;:::-;4255:260;;;-1:-1:-1;;;4255:260:24;;4204:14;4255:260;;;;;;;;;;;;4314:26;;;4255:260;;;;;;;;4233:11;4221:23;;4354:25;;;4255:260;;;;;;4393:27;;;4255:260;;;;;;;;;;;;;;;;;;;;4479:26;;;4255:260;;;;;;;;;4164:30;;-1:-1:-1;4221:23:24;;-1:-1:-1;;;;;4255:5:24;:15;;;;:260;;;;;;;;;;;4204:14;4255:15;:260;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4542:15:24;4526:13;:31;;;4567:8;:15;;-1:-1:-1;;4567:15:24;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;3152:1437:24:o;5932:169::-;6929:6;;-1:-1:-1;;;;;6929:6:24;6915:10;:20;6907:39;;;;;-1:-1:-1;;;6907:39:24;;;;;;;;;;;;-1:-1:-1;;;6907:39:24;;;;;;;;;;;;;;;6010:44:::1;6026:14;6042:11;6010:15;:44::i;:::-;6064:13;:30:::0;;::::1;::::0;;;::::1;;;-1:-1:-1::0;;6064:30:24;;::::1;::::0;;;::::1;::::0;;5932:169::o;1492:26::-;;;;;;:::o;1624:21::-;;;-1:-1:-1;;;;;1624:21:24;;:::o;6107:174::-;6929:6;;-1:-1:-1;;;;;6929:6:24;6915:10;:20;6907:39;;;;;-1:-1:-1;;;6907:39:24;;;;;;;;;;;;-1:-1:-1;;;6907:39:24;;;;;;;;;;;;;;;6187:45:::1;6203:15;6220:11;6187:15;:45::i;:::-;6242:14;:32:::0;;::::1;::::0;;;::::1;;;::::0;::::1;-1:-1:-1::0;;6242:32:24;;::::1;::::0;;;::::1;::::0;;6107:174::o;6484:168::-;6769:5;-1:-1:-1;;;;;6769:16:24;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6769:18:24;-1:-1:-1;;;;;6755:32:24;:10;:32;6747:55;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;-1:-1:-1;;;6747:55:24;;;;;;;;;;;;;;;6589:1:::1;6573:13;:17;;;6565:42;;;::::0;;-1:-1:-1;;;6565:42:24;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6565:42:24;;;;;;;;;;;;;::::1;;6617:12;:28:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;6617:28:24::1;-1:-1:-1::0;;6617:28:24;;::::1;::::0;;;::::1;::::0;;6484:168::o;1451:34::-;;;:::o;4658:102::-;4698:10;4741:4;-1:-1:-1;;;;;4741:10:24;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4741:12:24;;;;4658:102;-1:-1:-1;4658:102:24:o;1557:29::-;;;;;;;;;:::o;1370:33::-;;;:::o;5327:216::-;5378:5;5395:16;5421:11;5414:18;;:4;:18;;;;;;;;5395:37;;5453:1;5446:4;:8;;;:35;;;;;5465:11;5458:18;;:4;:18;;;;;;;;:23;;;;5446:35;5442:53;;;-1:-1:-1;;5483:12:24;5442:53;5525:11;5512:24;;5327:216;-1:-1:-1;;5327:216:24:o;5549:278::-;5655:1;5643:9;:13;;;5635:39;;;;;-1:-1:-1;;;5635:39:24;;;;;;;;;;;;-1:-1:-1;;;5635:39:24;;;;;;;;;;;;;;;637:9:19;5692:30:24;;;;;;5684:61;;;;;-1:-1:-1;;;5684:61:24;;;;;;;;;;;;-1:-1:-1;;;5684:61:24;;;;;;;;;;;;;;;5775:12;5763:24;;:9;:24;;;;;;;;:29;;;5755:65;;;;;-1:-1:-1;;;5755:65:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;5549:278;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_baseThreshold": "Used to determine base order range",
          "_keeper": "Account that can call `rebalance()`",
          "_limitThreshold": "Used to determine limit order range",
          "_maxTwapDeviation": "Max deviation from TWAP during rebalance",
          "_twapDuration": "TWAP duration in seconds for rebalance check",
          "_vault": "Underlying Alpha Vault"
        }
      },
      "getTick()": {
        "details": "Fetches current price in ticks from Uniswap pool."
      },
      "getTwap()": {
        "details": "Fetches time-weighted average price in ticks from Uniswap pool."
      },
      "rebalance()": {
        "notice": "Calculates new ranges for orders and calls `vault.rebalance()` so that vault can update its positions. Can only be called by keeper."
      }
    },
    "notice": "Rebalancing strategy for Alpha Vault that maintains the two          following range orders:          1. Base order is placed between X - B and X + B + TS.          2. Limit order is placed between X - L and X, or between X + TS             and X + L + TS, depending on which token it holds more of.          where:              X = current tick rounded down to multiple of tick spacing              TS = tick spacing              B = base threshold              L = limit threshold          Note that after these two orders, the vault should have deposited          all its tokens and should only have a few wei left.          Because the limit order tries to sell whichever token the vault          holds more of, the vault's holdings will have a tendency to get          closer to a 1:1 balance. This enables it to continue providing          liquidity without running out of inventory of either token, and          achieves this without the need to swap directly on Uniswap and pay          fees.",
    "title": "Alpha Strategy",
    "version": 1
  },
  "offset": [
    1333,
    6966
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6329355 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC433C80A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC433C80A EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDF8AD814 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE7C7CB91 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xFBFA77CF EQ PUSH2 0x284 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0xA6329355 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xA87BAB9C EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xACED1661 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xAF794480 EQ PUSH2 0x229 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x3CBFF3FE GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3CBFF3FE EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3DFA5D87 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x5D752A9A EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x748747E6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x1F1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x106B9CA1 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x16C3E29D EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x26D89545 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x28C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0x2D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x420 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x1B9 PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xADA JUMP JUMPDEST PUSH2 0x13D PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x15C PUSH2 0xB74 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x2 SIGNEXTEND PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0xC1D JUMP JUMPDEST PUSH2 0x13D PUSH2 0xD61 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x13D PUSH2 0xE14 JUMP JUMPDEST PUSH2 0x15C PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x346 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x3F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH7 0x1000000000000 MUL PUSH9 0xFFFFFF000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP4 DIV PUSH4 0xFFFFFFFF AND SWAP3 DUP5 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x46A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x493 JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x883BDBFD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP4 PUSH4 0x883BDBFD SWAP4 DUP8 SWAP4 SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 DUP6 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 DUP12 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x50C JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 SWAP1 DUP2 MSTORE DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x603 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5EB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x62C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x68B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x673 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x6AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x6C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6D7 JUMPI INVALID JUMPDEST SDIV SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7AE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x818 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x35B2B2B832B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP3 PUSH4 0x1000000 SWAP1 SWAP3 DIV SWAP1 SIGNEXTEND SWAP1 PUSH2 0x835 PUSH2 0xD85 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x84C JUMPI DUP3 PUSH2 0x84E JUMP JUMPDEST DUP4 JUMPDEST SWAP1 POP PUSH32 0x0 DUP2 PUSH3 0xD89E7 NOT ADD ADD PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x8C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x7469636B20746F6F206C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH3 0xD89E7 NOT PUSH1 0x0 SUB SUB SUB PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x936 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xE8D2C6D640E8DEDE40D0D2CED PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x940 PUSH2 0x429 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND DUP5 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0x959 JUMPI DUP4 DUP3 SUB PUSH2 0x95D JUMP JUMPDEST DUP2 DUP5 SUB JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x36B0BC2A3BB0B82232BB34B0BA34B7B7 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C7 DUP6 PUSH2 0xE4B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x87E5E083 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE DUP11 DUP5 SUB PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND PUSH1 0x44 DUP5 ADD MSTORE PUSH32 0x0 DUP6 ADD DUP13 DUP2 ADD DUP3 SIGNEXTEND PUSH1 0x64 DUP6 ADD MSTORE DUP12 DUP7 SUB DUP3 SIGNEXTEND PUSH1 0x84 DUP6 ADD MSTORE DUP6 DUP3 SIGNEXTEND PUSH1 0xA4 DUP6 ADD MSTORE DUP1 DUP3 SIGNEXTEND PUSH1 0xC4 DUP6 ADD MSTORE DUP12 DUP2 ADD SWAP1 SWAP2 SIGNEXTEND PUSH1 0xE4 DUP5 ADD MSTORE SWAP3 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP3 PUSH4 0x87E5E083 SWAP3 PUSH2 0x104 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x2 SWAP1 DUP2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF SWAP11 SWAP1 SWAP3 SIGNEXTEND SWAP10 SWAP1 SWAP10 AND OR SWAP1 SWAP8 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB22 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x35B2B2B832B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xB4C DUP2 PUSH32 0x0 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x35B2B2B832B9 PUSH1 0xD1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBF5 DUP2 PUSH32 0x0 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x2 SWAP3 SWAP1 SWAP3 SIGNEXTEND PUSH3 0xFFFFFF AND PUSH4 0x1000000 MUL PUSH6 0xFFFFFF000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5AA6E675 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x676F7665726E616E6365 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT PUSH2 0xD35 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3A3BB0B8223AB930BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x48 SHL MUL PUSH13 0xFFFFFFFF000000000000000000 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xE0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH7 0x1000000000000 SWAP1 DIV PUSH1 0x2 SIGNEXTEND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xE7D JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0xEC4 JUMPI POP PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP4 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xEBD JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xECE JUMPI PUSH1 0x0 NOT ADD JUMPDEST PUSH32 0x0 MUL SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 SIGNEXTEND SGT PUSH2 0xF3E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x7468726573686F6C64203E203 PUSH1 0x9C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0xF8F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF9E JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468726573686F6C642025207469636B53706163696E67000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC PUSH12 0x7B4C900B93CA75F32A702491 0xC0 0xD0 0xF9 0xDF ADDMOD 0xE5 CODECOPY DUP8 SWAP14 PUSH22 0x65D2653C267B633864736F6C63430007060033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "5": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "CALLVALUE",
      "path": "24"
    },
    "6": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "7": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "8": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "12": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "REVERT",
      "path": "24"
    },
    "16": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "17": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "POP",
      "path": "24"
    },
    "18": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "21": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "LT",
      "path": "24"
    },
    "22": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "26": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "29": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "SHR",
      "path": "24"
    },
    "32": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "33": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA6329355"
    },
    "38": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "GT",
      "path": "24"
    },
    "39": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "43": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "44": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC433C80A"
    },
    "49": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "GT",
      "path": "24"
    },
    "50": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "54": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "55": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xC433C80A"
    },
    "60": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "61": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x249"
    },
    "64": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "65": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "66": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xD0C93A7C"
    },
    "71": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "72": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x26C"
    },
    "75": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "76": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "77": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xDF8AD814"
    },
    "82": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "83": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x274"
    },
    "86": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "87": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "88": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xE7C7CB91"
    },
    "93": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "94": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x27C"
    },
    "97": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "98": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "99": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFBFA77CF"
    },
    "104": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "105": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x284"
    },
    "108": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "109": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMP",
      "path": "24"
    },
    "113": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "114": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "115": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA6329355"
    },
    "120": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "121": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F9"
    },
    "124": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "125": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "126": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xA87BAB9C"
    },
    "131": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "132": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x219"
    },
    "135": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "136": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "137": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xACED1661"
    },
    "142": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "143": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x221"
    },
    "146": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "147": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "148": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xAF794480"
    },
    "153": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "154": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x229"
    },
    "157": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "158": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMP",
      "path": "24"
    },
    "162": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "163": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "164": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3CBFF3FE"
    },
    "169": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "GT",
      "path": "24"
    },
    "170": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "174": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "175": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3CBFF3FE"
    },
    "180": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "181": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x199"
    },
    "184": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "185": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "186": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3DFA5D87"
    },
    "191": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "192": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1BB"
    },
    "195": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "196": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "197": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5D752A9A"
    },
    "202": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "203": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1C3"
    },
    "206": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "207": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "208": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x748747E6"
    },
    "213": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "214": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1CB"
    },
    "217": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "218": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "219": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x7D7C2A1C"
    },
    "224": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "225": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1F1"
    },
    "228": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "229": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMP",
      "path": "24"
    },
    "233": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "234": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "235": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x106B9CA1"
    },
    "240": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "241": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "245": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "246": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x16C3E29D"
    },
    "251": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "252": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x135"
    },
    "255": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "256": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "257": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x16F0115B"
    },
    "262": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "263": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x154"
    },
    "266": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "267": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "268": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x26D89545"
    },
    "273": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "EQ",
      "path": "24"
    },
    "274": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x178"
    },
    "277": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "278": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "279": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "DUP1",
      "path": "24"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1333,
        6966
      ],
      "op": "REVERT",
      "path": "24"
    },
    "283": {
      "offset": [
        1652,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "284": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x123"
    },
    "287": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x28C"
    },
    "290": {
      "fn": null,
      "jump": "i",
      "offset": [
        1652,
        1680
      ],
      "op": "JUMP",
      "path": "24"
    },
    "291": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "292": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "294": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "DUP1",
      "path": "24"
    },
    "295": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "296": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "297": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "DUP3",
      "path": "24"
    },
    "298": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "299": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "300": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "301": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "DUP2",
      "path": "24"
    },
    "302": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "303": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "SUB",
      "path": "24"
    },
    "304": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "306": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "ADD",
      "path": "24"
    },
    "307": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "308": {
      "fn": null,
      "offset": [
        1652,
        1680
      ],
      "op": "RETURN",
      "path": "24"
    },
    "309": {
      "offset": [
        1524,
        1551
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "310": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "313": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x292"
    },
    "316": {
      "fn": null,
      "jump": "i",
      "offset": [
        1524,
        1551
      ],
      "op": "JUMP",
      "path": "24"
    },
    "317": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "318": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "320": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "DUP1",
      "path": "24"
    },
    "321": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "322": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "324": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "325": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "326": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "327": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "328": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "DUP3",
      "path": "24"
    },
    "329": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "330": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "331": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "332": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "DUP2",
      "path": "24"
    },
    "333": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "334": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SUB",
      "path": "24"
    },
    "335": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "337": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "ADD",
      "path": "24"
    },
    "338": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "339": {
      "fn": null,
      "offset": [
        1524,
        1551
      ],
      "op": "RETURN",
      "path": "24"
    },
    "340": {
      "offset": [
        1409,
        1445
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "341": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15C"
    },
    "344": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2A2"
    },
    "347": {
      "fn": null,
      "jump": "i",
      "offset": [
        1409,
        1445
      ],
      "op": "JUMP",
      "path": "24"
    },
    "348": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "349": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "351": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "DUP1",
      "path": "24"
    },
    "352": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "offset": [
        1409,
        1445
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "362": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "363": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "AND",
      "path": "24"
    },
    "364": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "DUP3",
      "path": "24"
    },
    "365": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "366": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "367": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "368": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "DUP2",
      "path": "24"
    },
    "369": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "370": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "SUB",
      "path": "24"
    },
    "371": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "373": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "ADD",
      "path": "24"
    },
    "374": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "375": {
      "fn": null,
      "offset": [
        1409,
        1445
      ],
      "op": "RETURN",
      "path": "24"
    },
    "376": {
      "offset": [
        1592,
        1618
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "377": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x180"
    },
    "380": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2C6"
    },
    "383": {
      "fn": null,
      "jump": "i",
      "offset": [
        1592,
        1618
      ],
      "op": "JUMP",
      "path": "24"
    },
    "384": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "385": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "387": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "DUP1",
      "path": "24"
    },
    "388": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "389": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "394": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "395": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "396": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "AND",
      "path": "24"
    },
    "397": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "DUP3",
      "path": "24"
    },
    "398": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "399": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "400": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "401": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "DUP2",
      "path": "24"
    },
    "402": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "403": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SUB",
      "path": "24"
    },
    "404": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "406": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "ADD",
      "path": "24"
    },
    "407": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "408": {
      "fn": null,
      "offset": [
        1592,
        1618
      ],
      "op": "RETURN",
      "path": "24"
    },
    "409": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "410": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "413": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "415": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP1",
      "path": "24"
    },
    "416": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "417": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "SUB",
      "path": "24"
    },
    "418": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "420": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP2",
      "path": "24"
    },
    "421": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "LT",
      "path": "24"
    },
    "422": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "423": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1AF"
    },
    "426": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "427": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "429": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "DUP1",
      "path": "24"
    },
    "430": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "REVERT",
      "path": "24"
    },
    "431": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "432": {
      "op": "POP"
    },
    "433": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "434": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "436": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "437": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x2D9"
    },
    "440": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMP",
      "path": "24"
    },
    "441": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "442": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "STOP",
      "path": "24"
    },
    "443": {
      "offset": [
        1686,
        1707
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "444": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "447": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x420"
    },
    "450": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "jump": "i",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMP",
      "path": "24"
    },
    "451": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4843,
        5215
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "452": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4843,
        5215
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "455": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4843,
        5215
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x429"
    },
    "458": {
      "fn": "DynamicRangesStrategy.getTwap",
      "jump": "i",
      "offset": [
        4843,
        5215
      ],
      "op": "JUMP",
      "path": "24"
    },
    "459": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "460": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "463": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "465": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "DUP1",
      "path": "24"
    },
    "466": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "467": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "SUB",
      "path": "24"
    },
    "468": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "470": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "DUP2",
      "path": "24"
    },
    "471": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "LT",
      "path": "24"
    },
    "472": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "473": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1E1"
    },
    "476": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "477": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "479": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "DUP1",
      "path": "24"
    },
    "480": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "REVERT",
      "path": "24"
    },
    "481": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "490": {
      "op": "SHL"
    },
    "491": {
      "op": "SUB"
    },
    "492": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "AND",
      "path": "24"
    },
    "493": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6E0"
    },
    "496": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "jump": "i",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMP",
      "path": "24"
    },
    "497": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3152,
        4589
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "498": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3152,
        4589
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "501": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3152,
        4589
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7D0"
    },
    "504": {
      "fn": "DynamicRangesStrategy.rebalance",
      "jump": "i",
      "offset": [
        3152,
        4589
      ],
      "op": "JUMP",
      "path": "24"
    },
    "505": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "506": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "509": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "511": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "DUP1",
      "path": "24"
    },
    "512": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "513": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "SUB",
      "path": "24"
    },
    "514": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "516": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "DUP2",
      "path": "24"
    },
    "517": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "LT",
      "path": "24"
    },
    "518": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "519": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x20F"
    },
    "522": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "523": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "525": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "DUP1",
      "path": "24"
    },
    "526": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "REVERT",
      "path": "24"
    },
    "527": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "530": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "532": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "533": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xADA"
    },
    "536": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMP",
      "path": "24"
    },
    "537": {
      "offset": [
        1492,
        1518
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "538": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "541": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB6B"
    },
    "544": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1492,
        1518
      ],
      "op": "JUMP",
      "path": "24"
    },
    "545": {
      "offset": [
        1624,
        1645
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "546": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1624,
        1645
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15C"
    },
    "549": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1624,
        1645
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB74"
    },
    "552": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        1624,
        1645
      ],
      "op": "JUMP",
      "path": "24"
    },
    "553": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "554": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "557": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "559": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "DUP1",
      "path": "24"
    },
    "560": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "561": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "SUB",
      "path": "24"
    },
    "562": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "564": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "DUP2",
      "path": "24"
    },
    "565": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "LT",
      "path": "24"
    },
    "566": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "567": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x23F"
    },
    "570": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "571": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "573": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "DUP1",
      "path": "24"
    },
    "574": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "REVERT",
      "path": "24"
    },
    "575": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "578": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "580": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "581": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB83"
    },
    "584": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMP",
      "path": "24"
    },
    "585": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "586": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x1B9"
    },
    "589": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "591": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP1",
      "path": "24"
    },
    "592": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "593": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "SUB",
      "path": "24"
    },
    "594": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "596": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP2",
      "path": "24"
    },
    "597": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "LT",
      "path": "24"
    },
    "598": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "599": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x25F"
    },
    "602": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "603": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "605": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "DUP1",
      "path": "24"
    },
    "606": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "REVERT",
      "path": "24"
    },
    "607": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "CALLDATALOAD",
      "path": "24"
    },
    "610": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "615": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "AND",
      "path": "24"
    },
    "616": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC1D"
    },
    "619": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMP",
      "path": "24"
    },
    "620": {
      "offset": [
        1451,
        1485
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "621": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        1451,
        1485
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "624": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        1451,
        1485
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD61"
    },
    "627": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "jump": "i",
      "offset": [
        1451,
        1485
      ],
      "op": "JUMP",
      "path": "24"
    },
    "628": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4658,
        4760
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "629": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4658,
        4760
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "632": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4658,
        4760
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD85"
    },
    "635": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "i",
      "offset": [
        4658,
        4760
      ],
      "op": "JUMP",
      "path": "24"
    },
    "636": {
      "offset": [
        1557,
        1586
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "637": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x13D"
    },
    "640": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE14"
    },
    "643": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "i",
      "offset": [
        1557,
        1586
      ],
      "op": "JUMP",
      "path": "24"
    },
    "644": {
      "offset": [
        1370,
        1403
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "645": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1370,
        1403
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x15C"
    },
    "648": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1370,
        1403
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE27"
    },
    "651": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "i",
      "offset": [
        1370,
        1403
      ],
      "op": "JUMP",
      "path": "24"
    },
    "652": {
      "offset": [
        1652,
        1680
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "653": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1652,
        1680
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "655": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1652,
        1680
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "656": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1652,
        1680
      ],
      "op": "DUP2",
      "path": "24"
    },
    "657": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1652,
        1680
      ],
      "op": "JUMP",
      "path": "24"
    },
    "658": {
      "offset": [
        1524,
        1551
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "659": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "661": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "662": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1000000"
    },
    "667": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "668": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "DIV",
      "path": "24"
    },
    "669": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "671": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "672": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1524,
        1551
      ],
      "op": "DUP2",
      "path": "24"
    },
    "673": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1524,
        1551
      ],
      "op": "JUMP",
      "path": "24"
    },
    "674": {
      "offset": [
        1409,
        1445
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "675": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1409,
        1445
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "708": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1409,
        1445
      ],
      "op": "DUP2",
      "path": "24"
    },
    "709": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1409,
        1445
      ],
      "op": "JUMP",
      "path": "24"
    },
    "710": {
      "offset": [
        1592,
        1618
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "711": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "713": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "offset": [
        1592,
        1618
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "720": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "DIV",
      "path": "24"
    },
    "721": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "726": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "AND",
      "path": "24"
    },
    "727": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1592,
        1618
      ],
      "op": "DUP2",
      "path": "24"
    },
    "728": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1592,
        1618
      ],
      "op": "JUMP",
      "path": "24"
    },
    "729": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "730": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "769": {
      "op": "SHL"
    },
    "770": {
      "op": "SUB"
    },
    "771": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "24"
    },
    "772": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5AA6E675"
    },
    "777": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "779": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "780": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "781": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "786": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "787": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "789": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "24"
    },
    "790": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "791": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "792": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "794": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "24"
    },
    "795": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "797": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "799": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "800": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "801": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "24"
    },
    "802": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "24"
    },
    "803": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "804": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "24"
    },
    "805": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "806": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "807": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "808": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "809": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "810": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x332"
    },
    "813": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "814": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "816": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "817": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "818": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "819": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "820": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "24"
    },
    "821": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "822": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "823": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "824": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "825": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x346"
    },
    "828": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "829": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "830": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "832": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "833": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "834": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "835": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "837": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "838": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "839": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "840": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "841": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "842": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "843": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "845": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "846": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "847": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "849": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "850": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "24"
    },
    "851": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "852": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x35C"
    },
    "855": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "856": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "858": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "859": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "860": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "861": {
      "op": "POP"
    },
    "862": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "op": "SUB"
    },
    "871": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "872": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "24"
    },
    "873": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "24"
    },
    "874": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3A7"
    },
    "877": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "878": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "880": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "24"
    },
    "881": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "890": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "891": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "893": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "895": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "896": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "897": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "898": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "900": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "902": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "903": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "904": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "905": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "921": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "922": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "923": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "924": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "925": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "926": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "927": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "928": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "929": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "24"
    },
    "930": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "932": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "933": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "934": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "24"
    },
    "935": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "936": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6403,
        6404
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 0,
      "value": "0x0"
    },
    "938": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6400
      ],
      "op": "DUP2",
      "path": "24"
    },
    "939": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "941": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "942": {
      "branch": 25,
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6383,
        6404
      ],
      "op": "SGT",
      "path": "24"
    },
    "943": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x3F2"
    },
    "946": {
      "branch": 25,
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "947": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "949": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP1",
      "path": "24"
    },
    "950": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "957": {
      "op": "SHL"
    },
    "958": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP2",
      "path": "24"
    },
    "959": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "960": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "962": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "964": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "24"
    },
    "965": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "24"
    },
    "966": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "967": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x10"
    },
    "969": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "971": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "24"
    },
    "972": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "24"
    },
    "973": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "974": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "993": {
      "op": "SHL"
    },
    "994": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "996": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP3",
      "path": "24"
    },
    "997": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "24"
    },
    "998": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "999": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1000": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1001": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1002": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1003": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1004": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SUB",
      "path": "24"
    },
    "1005": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "1007": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "ADD",
      "path": "24"
    },
    "1008": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1009": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1010": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6375,
        6425
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1011": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6451
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 1,
      "value": "0x0"
    },
    "1013": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1014": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1015": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1017": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1018": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1019": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1020": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "1021": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "1025": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "AND",
      "path": "24"
    },
    "1026": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "PUSH7",
      "path": "24",
      "value": "0x1000000000000"
    },
    "1034": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "MUL",
      "path": "24"
    },
    "1035": {
      "op": "PUSH9",
      "value": "0xFFFFFF000000000000"
    },
    "1045": {
      "op": "NOT"
    },
    "1046": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1047": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1048": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "AND",
      "path": "24"
    },
    "1049": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1050": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1051": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1052": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "OR",
      "path": "24"
    },
    "1053": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1054": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        6435,
        6471
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1055": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        6287,
        6478
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1056": {
      "offset": [
        1686,
        1707
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1057": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x3"
    },
    "1059": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1060": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1062": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "1063": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "offset": [
        1686,
        1707
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1064": {
      "fn": "DynamicRangesStrategy.setMaxTwapDeviation",
      "jump": "o",
      "offset": [
        1686,
        1707
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1065": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4843,
        5215
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1066": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4883,
        4888
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1068": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1069": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1070": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1072": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1073": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1074": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4987,
        4988
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "1076": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1077": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1078": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1079": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x60"
    },
    "1081": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1082": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "ADD",
      "path": "24"
    },
    "1083": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1084": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1091": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1092": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "DIV",
      "path": "24"
    },
    "1093": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1098": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "AND",
      "path": "24"
    },
    "1099": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4923,
        4935
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1100": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4883,
        4888
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1101": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4883,
        4888
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1102": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1104": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1105": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "ADD",
      "path": "24"
    },
    "1106": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1107": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1108": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "CALLDATASIZE",
      "path": "24"
    },
    "1109": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1110": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "CALLDATACOPY",
      "path": "24"
    },
    "1111": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "ADD",
      "path": "24"
    },
    "1112": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4974,
        4989
      ],
      "op": "POP",
      "path": "24"
    },
    "1115": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4945,
        4989
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1116": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4945,
        4989
      ],
      "op": "POP",
      "path": "24"
    },
    "1117": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5015,
        5028
      ],
      "op": "DUP2",
      "path": "24",
      "statement": 2
    },
    "1118": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5009
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1119": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5010,
        5011
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1121": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1122": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1123": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1124": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "LT",
      "path": "24"
    },
    "1125": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x46A"
    },
    "1128": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1129": {
      "dev": "Index out of range",
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "INVALID",
      "path": "24"
    },
    "1130": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1131": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1133": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "MUL",
      "path": "24"
    },
    "1134": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1136": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "ADD",
      "path": "24"
    },
    "1137": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5012
      ],
      "op": "ADD",
      "path": "24"
    },
    "1138": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1139": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1144": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "AND",
      "path": "24"
    },
    "1145": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1146": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1147": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1152": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "AND",
      "path": "24"
    },
    "1153": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1154": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1155": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "POP",
      "path": "24"
    },
    "1156": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4999,
        5028
      ],
      "op": "POP",
      "path": "24"
    },
    "1157": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5054,
        5055
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 3,
      "value": "0x0"
    },
    "1159": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5048
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1160": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5049,
        5050
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1162": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1163": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1164": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1165": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "LT",
      "path": "24"
    },
    "1166": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x493"
    },
    "1169": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1170": {
      "dev": "Index out of range",
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "INVALID",
      "path": "24"
    },
    "1171": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1172": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5055
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1177": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5055
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1178": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5055
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1179": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5055
      ],
      "op": "AND",
      "path": "24"
    },
    "1180": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1182": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1183": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1184": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "MUL",
      "path": "24"
    },
    "1185": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1186": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1187": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1188": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "ADD",
      "path": "24"
    },
    "1189": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1190": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5051
      ],
      "op": "ADD",
      "path": "24"
    },
    "1191": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5038,
        5055
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1192": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1194": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1195": {
      "op": "PUSH4",
      "value": "0x883BDBFD"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1202": {
      "op": "SHL"
    },
    "1203": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1204": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1205": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1207": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1208": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1209": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1210": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1211": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1212": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1213": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1214": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "1216": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1217": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1218": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1219": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1220": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1221": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5067,
        5097
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1223": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5067,
        5097
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5107
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "1265": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5115
      ],
      "op": "AND",
      "path": "24"
    },
    "1266": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5115
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1267": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5115
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x883BDBFD"
    },
    "1272": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5115
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1273": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5116,
        5126
      ],
      "op": "DUP8",
      "path": "24"
    },
    "1274": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5116,
        5126
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1275": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1276": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1277": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1278": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1279": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "1281": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1282": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1283": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP6",
      "path": "24"
    },
    "1284": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1285": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1286": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1287": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MUL",
      "path": "24"
    },
    "1288": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1289": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1290": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1291": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5067,
        5097
      ],
      "op": "DUP12",
      "path": "24"
    },
    "1292": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1293": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1294": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1295": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "LT",
      "path": "24"
    },
    "1296": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1297": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x524"
    },
    "1300": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1301": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1302": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1303": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1304": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1305": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1306": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1307": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1308": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1309": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1311": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1312": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x50C"
    },
    "1315": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1316": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1317": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1318": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1319": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1320": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1321": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1322": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1323": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1324": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1325": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1326": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1327": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1328": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1330": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1332": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1333": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1334": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1335": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SUB",
      "path": "24"
    },
    "1336": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1337": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1338": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1339": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "1340": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1341": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1342": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1343": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x547"
    },
    "1346": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1347": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1349": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1350": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1351": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1352": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1353": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GAS",
      "path": "24"
    },
    "1354": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "1355": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1356": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1357": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1358": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x55B"
    },
    "1361": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1362": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1363": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1365": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1366": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "1367": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1368": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1370": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1371": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1372": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1373": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1374": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1375": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1376": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1378": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1379": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1380": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1382": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1383": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "1384": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1F"
    },
    "1386": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1387": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1388": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1389": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1392": {
      "op": "NOT"
    },
    "1393": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "AND",
      "path": "24"
    },
    "1394": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1395": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1396": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1398": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1399": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1400": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1401": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1402": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "LT",
      "path": "24"
    },
    "1403": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1404": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x584"
    },
    "1407": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1408": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1410": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1411": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1412": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1413": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1414": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1415": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1416": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1417": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1418": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1419": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1421": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1422": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1423": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1424": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1425": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1426": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1427": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "1433": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1434": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1435": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1436": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5A4"
    },
    "1439": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1440": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1442": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1443": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1444": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1445": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1446": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1447": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1448": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1449": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1451": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1452": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1453": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP6",
      "path": "24"
    },
    "1454": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1455": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1456": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1457": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5B9"
    },
    "1460": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1461": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1463": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1464": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1465": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1466": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1467": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1468": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1469": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1471": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1472": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MUL",
      "path": "24"
    },
    "1473": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1474": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1475": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1476": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "1482": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1483": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1484": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "OR",
      "path": "24"
    },
    "1485": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1486": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5D6"
    },
    "1489": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1490": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1492": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1493": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1494": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1495": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1496": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1499": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1500": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1502": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1503": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1504": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1505": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1506": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1507": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1508": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1509": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MUL",
      "path": "24"
    },
    "1510": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1511": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1512": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1513": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1515": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1516": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1517": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1518": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "LT",
      "path": "24"
    },
    "1519": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1520": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x603"
    },
    "1523": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1524": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1525": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1526": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1527": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1528": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1529": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1530": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1531": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1532": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1534": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1535": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x5EB"
    },
    "1538": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1539": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1540": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1541": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1542": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1543": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1544": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1545": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1546": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1547": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1549": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1550": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1552": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1553": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1554": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1555": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1557": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1558": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1559": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1560": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1561": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1562": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP5",
      "path": "24"
    },
    "1563": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "1569": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1570": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1571": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1572": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x62C"
    },
    "1575": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1576": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1578": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1579": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1580": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1581": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1582": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1583": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1584": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1585": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1587": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1588": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1589": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP6",
      "path": "24"
    },
    "1590": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1591": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1592": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1593": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x641"
    },
    "1596": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1597": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1599": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1600": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1601": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1602": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1603": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1604": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1605": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1607": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1608": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MUL",
      "path": "24"
    },
    "1609": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1610": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1611": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1612": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH5",
      "path": "24",
      "value": "0x100000000"
    },
    "1618": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1619": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "GT",
      "path": "24"
    },
    "1620": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "OR",
      "path": "24"
    },
    "1621": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1622": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x65E"
    },
    "1625": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1626": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1628": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1629": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1630": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1631": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1632": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1633": {
      "op": "POP"
    },
    "1634": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1635": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1636": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1638": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1639": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1640": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1641": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1642": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1643": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1644": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1645": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MUL",
      "path": "24"
    },
    "1646": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1647": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1648": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1649": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1651": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1652": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1653": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1654": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "LT",
      "path": "24"
    },
    "1655": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1656": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x68B"
    },
    "1659": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1660": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1661": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1662": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1663": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1664": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1665": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1666": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1667": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1668": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1670": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1671": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x673"
    },
    "1674": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1675": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1676": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1677": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1678": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1679": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1680": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1681": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1682": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "ADD",
      "path": "24"
    },
    "1683": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1685": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1686": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1687": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1688": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5103,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1689": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5066,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1690": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5066,
        5127
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1691": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5066,
        5127
      ],
      "op": "POP",
      "path": "24"
    },
    "1692": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5194,
        5207
      ],
      "op": "DUP3",
      "path": "24",
      "statement": 4
    },
    "1693": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1698": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "AND",
      "path": "24"
    },
    "1699": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5187
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1700": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5188,
        5189
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1702": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1703": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1704": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1705": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "LT",
      "path": "24"
    },
    "1706": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6AF"
    },
    "1709": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1710": {
      "dev": "Index out of range",
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "INVALID",
      "path": "24"
    },
    "1711": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1712": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1714": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "MUL",
      "path": "24"
    },
    "1715": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1717": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "ADD",
      "path": "24"
    },
    "1718": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "ADD",
      "path": "24"
    },
    "1719": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5172,
        5190
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1720": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5166
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1721": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5167,
        5168
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "1723": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1724": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1725": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1726": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "LT",
      "path": "24"
    },
    "1727": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6C4"
    },
    "1730": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1731": {
      "dev": "Index out of range",
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "INVALID",
      "path": "24"
    },
    "1732": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1733": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1735": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "MUL",
      "path": "24"
    },
    "1736": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1738": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "ADD",
      "path": "24"
    },
    "1739": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "ADD",
      "path": "24"
    },
    "1740": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5169
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1741": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5151,
        5190
      ],
      "op": "SUB",
      "path": "24"
    },
    "1742": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "1744": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "1745": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1746": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x6D7"
    },
    "1749": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1750": {
      "dev": "Division by zero",
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "INVALID",
      "path": "24"
    },
    "1751": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1752": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5150,
        5207
      ],
      "op": "SDIV",
      "path": "24"
    },
    "1753": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5137,
        5208
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "1754": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5137,
        5208
      ],
      "op": "POP",
      "path": "24"
    },
    "1755": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5137,
        5208
      ],
      "op": "POP",
      "path": "24"
    },
    "1756": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5137,
        5208
      ],
      "op": "POP",
      "path": "24"
    },
    "1757": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        5137,
        5208
      ],
      "op": "POP",
      "path": "24"
    },
    "1758": {
      "fn": "DynamicRangesStrategy.getTwap",
      "offset": [
        4843,
        5215
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1759": {
      "fn": "DynamicRangesStrategy.getTwap",
      "jump": "o",
      "offset": [
        4843,
        5215
      ],
      "op": "JUMP",
      "path": "24"
    },
    "1760": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1761": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1800": {
      "op": "SHL"
    },
    "1801": {
      "op": "SUB"
    },
    "1802": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "24"
    },
    "1803": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5AA6E675"
    },
    "1808": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1810": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1811": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1812": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "1817": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "1818": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "1820": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "24"
    },
    "1821": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1822": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1823": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1825": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "24"
    },
    "1826": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1828": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1830": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1831": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1832": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "24"
    },
    "1833": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "24"
    },
    "1834": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1835": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "24"
    },
    "1836": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1837": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "1838": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1839": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1840": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1841": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x739"
    },
    "1844": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1845": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1847": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1848": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1849": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1850": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "1851": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "24"
    },
    "1852": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "1853": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1854": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1855": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1856": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x74D"
    },
    "1859": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1860": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1861": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1863": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1864": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "1865": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1866": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1868": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1869": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1870": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "1871": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "1872": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "1873": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "1874": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1876": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1877": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "1878": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1880": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1881": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "24"
    },
    "1882": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "1883": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x763"
    },
    "1886": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1887": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "1889": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1890": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1891": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1900": {
      "op": "SHL"
    },
    "1901": {
      "op": "SUB"
    },
    "1902": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "1903": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "24"
    },
    "1904": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "24"
    },
    "1905": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x7AE"
    },
    "1908": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "1909": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "1911": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1912": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1921": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1922": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "1924": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "1926": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1927": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "1928": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1929": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "1931": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "1933": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1934": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "1935": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1936": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "1947": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1949": {
      "op": "SHL"
    },
    "1950": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "1952": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "1953": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "1954": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "1955": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1956": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "1957": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1958": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "1959": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1960": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "24"
    },
    "1961": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "1963": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "1964": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1965": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "24"
    },
    "1966": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "1967": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5909
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 5,
      "value": "0x1"
    },
    "1969": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "DUP1",
      "path": "24"
    },
    "1970": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1977": {
      "op": "SHL"
    },
    "1978": {
      "op": "SUB"
    },
    "1979": {
      "op": "NOT"
    },
    "1980": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "AND",
      "path": "24"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1990": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1991": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "1992": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "AND",
      "path": "24"
    },
    "1993": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1994": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1995": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "1996": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "OR",
      "path": "24"
    },
    "1997": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "1998": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "offset": [
        5903,
        5919
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "1999": {
      "fn": "DynamicRangesStrategy.setKeeper",
      "jump": "o",
      "offset": [
        5833,
        5926
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2000": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3152,
        4589
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2001": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3214,
        3220
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 6,
      "value": "0x1"
    },
    "2003": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3214,
        3220
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2010": {
      "op": "SHL"
    },
    "2011": {
      "op": "SUB"
    },
    "2012": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3214,
        3220
      ],
      "op": "AND",
      "path": "24"
    },
    "2013": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3200,
        3210
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2014": {
      "branch": 26,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3200,
        3220
      ],
      "op": "EQ",
      "path": "24"
    },
    "2015": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x818"
    },
    "2018": {
      "branch": 26,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2019": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2021": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2022": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2031": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2032": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2034": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2036": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2037": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "ADD",
      "path": "24"
    },
    "2038": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2039": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "2041": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2043": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2044": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "ADD",
      "path": "24"
    },
    "2045": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2046": {
      "op": "PUSH6",
      "value": "0x35B2B2B832B9"
    },
    "2053": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2055": {
      "op": "SHL"
    },
    "2056": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2058": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2059": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "ADD",
      "path": "24"
    },
    "2060": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2061": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2062": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2063": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2064": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2065": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2066": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "SUB",
      "path": "24"
    },
    "2067": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2069": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "ADD",
      "path": "24"
    },
    "2070": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2071": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2072": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3192,
        3231
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2073": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3242,
        3262
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2075": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2076": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2077": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2079": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2080": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2081": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2082": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3265,
        3278
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2083": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1000000"
    },
    "2088": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2089": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2090": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "DIV",
      "path": "24"
    },
    "2091": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2092": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2093": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3312,
        3326
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2094": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3506,
        3515
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x835"
    },
    "2097": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3506,
        3513
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD85"
    },
    "2100": {
      "fn": "DynamicRangesStrategy.rebalance",
      "jump": "i",
      "offset": [
        3506,
        3515
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2101": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3506,
        3515
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2102": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3493,
        3515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2103": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3493,
        3515
      ],
      "op": "POP",
      "path": "24"
    },
    "2104": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3525,
        3543
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2106": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3575,
        3590
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2107": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3590
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2109": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3590
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2110": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3572
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2111": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3590
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2113": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3590
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2114": {
      "branch": 27,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3590
      ],
      "op": "SGT",
      "path": "24"
    },
    "2115": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x84C"
    },
    "2118": {
      "branch": 27,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2119": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3610,
        3625
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2120": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x84E"
    },
    "2123": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2124": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2125": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3593,
        3607
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2126": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3558,
        3625
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2127": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3525,
        3625
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2128": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3525,
        3625
      ],
      "op": "POP",
      "path": "24"
    },
    "2129": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3685,
        3696
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 7,
      "value": "0x0"
    },
    "2162": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3670,
        3682
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2163": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "2167": {
      "op": "NOT"
    },
    "2168": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3650,
        3682
      ],
      "op": "ADD",
      "path": "24"
    },
    "2169": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3650,
        3696
      ],
      "op": "ADD",
      "path": "24"
    },
    "2170": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3696
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2172": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3696
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2173": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3647
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2174": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3696
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2176": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3696
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2177": {
      "branch": 28,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3643,
        3696
      ],
      "op": "SGT",
      "path": "24"
    },
    "2178": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x8C1"
    },
    "2181": {
      "branch": 28,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2182": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2184": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2185": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2194": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2195": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2197": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2199": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2200": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "ADD",
      "path": "24"
    },
    "2201": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2202": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC"
    },
    "2204": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2206": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2207": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "ADD",
      "path": "24"
    },
    "2208": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2209": {
      "op": "PUSH12",
      "value": "0x7469636B20746F6F206C6F77"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2227": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2228": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "ADD",
      "path": "24"
    },
    "2229": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2230": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2231": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2232": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2233": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2234": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2235": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "SUB",
      "path": "24"
    },
    "2236": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2238": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "ADD",
      "path": "24"
    },
    "2239": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2240": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2241": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3635,
        3713
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2242": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3773,
        3784
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 8,
      "value": "0x0"
    },
    "2275": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3758,
        3770
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2276": {
      "op": "PUSH3",
      "value": "0xD89E7"
    },
    "2280": {
      "op": "NOT"
    },
    "2281": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2283": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        637,
        646
      ],
      "op": "SUB",
      "path": "19"
    },
    "2284": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3738,
        3770
      ],
      "op": "SUB",
      "path": "24"
    },
    "2285": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3738,
        3784
      ],
      "op": "SUB",
      "path": "24"
    },
    "2286": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3784
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2288": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3784
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2289": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3735
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2290": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3784
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2292": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3784
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2293": {
      "branch": 29,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3731,
        3784
      ],
      "op": "SLT",
      "path": "24"
    },
    "2294": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x936"
    },
    "2297": {
      "branch": 29,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2298": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2300": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2301": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2308": {
      "op": "SHL"
    },
    "2309": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2310": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2311": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2313": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2315": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2316": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "ADD",
      "path": "24"
    },
    "2317": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2318": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xD"
    },
    "2320": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2322": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2323": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "ADD",
      "path": "24"
    },
    "2324": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2325": {
      "op": "PUSH13",
      "value": "0xE8D2C6D640E8DEDE40D0D2CED"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x9B"
    },
    "2341": {
      "op": "SHL"
    },
    "2342": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2344": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2345": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "ADD",
      "path": "24"
    },
    "2346": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2347": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2348": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2349": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2350": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2351": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2352": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "SUB",
      "path": "24"
    },
    "2353": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2355": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "ADD",
      "path": "24"
    },
    "2356": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2357": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2358": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3723,
        3802
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2359": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3996,
        4006
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2361": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4009,
        4018
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x940"
    },
    "2364": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4009,
        4016
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x429"
    },
    "2367": {
      "fn": "DynamicRangesStrategy.rebalance",
      "jump": "i",
      "offset": [
        4009,
        4018
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2368": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4009,
        4018
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2369": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3996,
        4018
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2370": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        3996,
        4018
      ],
      "op": "POP",
      "path": "24"
    },
    "2371": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4028,
        4043
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2373": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2374": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4057
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2376": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4057
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2377": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4050
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2378": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4057
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2380": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4057
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2381": {
      "branch": 30,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4057
      ],
      "op": "SGT",
      "path": "24"
    },
    "2382": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x959"
    },
    "2385": {
      "branch": 30,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2386": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4081,
        4085
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2387": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4074,
        4078
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2388": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4074,
        4085
      ],
      "op": "SUB",
      "path": "24"
    },
    "2389": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x95D"
    },
    "2392": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2393": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2394": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4067,
        4071
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2395": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4060,
        4064
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2396": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4060,
        4071
      ],
      "op": "SUB",
      "path": "24"
    },
    "2397": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4046,
        4085
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2398": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4028,
        4085
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2399": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4028,
        4085
      ],
      "op": "POP",
      "path": "24"
    },
    "2400": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 9,
      "value": "0x0"
    },
    "2402": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "2404": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2405": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2406": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2407": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x100"
    },
    "2410": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "EXP",
      "path": "24"
    },
    "2411": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2412": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "DIV",
      "path": "24"
    },
    "2413": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2415": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4116,
        4132
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2416": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2418": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2419": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4112
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2420": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2422": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2423": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "SGT",
      "path": "24"
    },
    "2424": {
      "branch": 31,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4103,
        4132
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2425": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9BC"
    },
    "2428": {
      "branch": 31,
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2429": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2431": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2432": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2433": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2439": {
      "op": "SHL"
    },
    "2440": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2441": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2442": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2444": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2446": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2447": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "ADD",
      "path": "24"
    },
    "2448": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2449": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x10"
    },
    "2451": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2453": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2454": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "ADD",
      "path": "24"
    },
    "2455": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2456": {
      "op": "PUSH16",
      "value": "0x36B0BC2A3BB0B82232BB34B0BA34B7B7"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2478": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2479": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "ADD",
      "path": "24"
    },
    "2480": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2481": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2482": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2483": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2484": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2485": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2486": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "SUB",
      "path": "24"
    },
    "2487": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2489": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "ADD",
      "path": "24"
    },
    "2490": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2491": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2492": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4095,
        4153
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2493": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4164,
        4179
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2495": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4182,
        4194
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x9C7"
    },
    "2498": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4189,
        4193
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2499": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4182,
        4188
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE4B"
    },
    "2502": {
      "fn": "DynamicRangesStrategy.rebalance",
      "jump": "i",
      "offset": [
        4182,
        4194
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2503": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4182,
        4194
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2504": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 10,
      "value": "0x40"
    },
    "2506": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2507": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2508": {
      "op": "PUSH4",
      "value": "0x87E5E083"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2517": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2518": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4204,
        4218
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2520": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2522": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2523": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2524": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2525": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2526": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2527": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2529": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2530": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2531": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2532": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2533": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2534": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4314,
        4340
      ],
      "op": "DUP11",
      "path": "24"
    },
    "2535": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4314,
        4340
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2536": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4314,
        4340
      ],
      "op": "SUB",
      "path": "24"
    },
    "2537": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2539": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2540": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2541": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2542": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2544": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2545": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2546": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2547": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4233,
        4244
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "2580": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4221,
        4244
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2581": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4221,
        4244
      ],
      "op": "ADD",
      "path": "24"
    },
    "2582": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4354,
        4379
      ],
      "op": "DUP13",
      "path": "24"
    },
    "2583": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4354,
        4379
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2584": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4354,
        4379
      ],
      "op": "ADD",
      "path": "24"
    },
    "2585": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2586": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2587": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2589": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2590": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2591": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2592": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4393,
        4420
      ],
      "op": "DUP12",
      "path": "24"
    },
    "2593": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4393,
        4420
      ],
      "op": "DUP7",
      "path": "24"
    },
    "2594": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4393,
        4420
      ],
      "op": "SUB",
      "path": "24"
    },
    "2595": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2596": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2597": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x84"
    },
    "2599": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2600": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2601": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2602": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2603": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2604": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2605": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA4"
    },
    "2607": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2608": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2609": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2610": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2611": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2612": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2613": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC4"
    },
    "2615": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP6",
      "path": "24"
    },
    "2616": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2617": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2618": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4479,
        4505
      ],
      "op": "DUP12",
      "path": "24"
    },
    "2619": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4479,
        4505
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2620": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4479,
        4505
      ],
      "op": "ADD",
      "path": "24"
    },
    "2621": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2622": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2623": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2624": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE4"
    },
    "2626": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP5",
      "path": "24"
    },
    "2627": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2628": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2629": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2630": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2631": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4164,
        4194
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2632": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4164,
        4194
      ],
      "op": "SWAP5",
      "path": "24"
    },
    "2633": {
      "op": "POP"
    },
    "2634": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4221,
        4244
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2635": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4221,
        4244
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4260
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "2677": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4270
      ],
      "op": "AND",
      "path": "24"
    },
    "2678": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4270
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2679": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4270
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x87E5E083"
    },
    "2684": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4270
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2685": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0x104"
    },
    "2688": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2689": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2690": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2691": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP4",
      "path": "24"
    },
    "2692": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2693": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2694": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2695": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "SUB",
      "path": "24"
    },
    "2696": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ADD",
      "path": "24"
    },
    "2697": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2698": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4204,
        4218
      ],
      "op": "DUP4",
      "path": "24"
    },
    "2699": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4270
      ],
      "op": "DUP8",
      "path": "24"
    },
    "2700": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2701": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "2702": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2703": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2704": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2705": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xA99"
    },
    "2708": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2709": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2711": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2712": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2713": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2714": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "POP",
      "path": "24"
    },
    "2715": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "GAS",
      "path": "24"
    },
    "2716": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "CALL",
      "path": "24"
    },
    "2717": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2718": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2719": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "2720": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xAAD"
    },
    "2723": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2724": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2725": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2727": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2728": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "2729": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "2730": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2732": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2733": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4255,
        4515
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2734": {
      "op": "POP"
    },
    "2735": {
      "op": "POP"
    },
    "2736": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4542,
        4557
      ],
      "op": "TIMESTAMP",
      "path": "24",
      "statement": 11
    },
    "2737": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4526,
        4539
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2739": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4526,
        4557
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2740": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4526,
        4557
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2741": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4526,
        4557
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2742": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4575
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 12,
      "value": "0x3"
    },
    "2744": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2745": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2746": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2750": {
      "op": "NOT"
    },
    "2751": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "AND",
      "path": "24"
    },
    "2752": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "2756": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP11",
      "path": "24"
    },
    "2757": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2758": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2759": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2760": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP10",
      "path": "24"
    },
    "2761": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2762": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP10",
      "path": "24"
    },
    "2763": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "AND",
      "path": "24"
    },
    "2764": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "OR",
      "path": "24"
    },
    "2765": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2766": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SWAP8",
      "path": "24"
    },
    "2767": {
      "fn": "DynamicRangesStrategy.rebalance",
      "offset": [
        4567,
        4582
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "POP"
    },
    "2770": {
      "op": "POP"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "op": "POP"
    },
    "2775": {
      "op": "POP"
    },
    "2776": {
      "op": "POP"
    },
    "2777": {
      "fn": "DynamicRangesStrategy.rebalance",
      "jump": "o",
      "offset": [
        3152,
        4589
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2778": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2779": {
      "offset": [
        6929,
        6935
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2781": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6929,
        6935
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2788": {
      "op": "SHL"
    },
    "2789": {
      "op": "SUB"
    },
    "2790": {
      "offset": [
        6929,
        6935
      ],
      "op": "AND",
      "path": "24"
    },
    "2791": {
      "offset": [
        6915,
        6925
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2792": {
      "offset": [
        6915,
        6935
      ],
      "op": "EQ",
      "path": "24"
    },
    "2793": {
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xB22"
    },
    "2796": {
      "offset": [
        6907,
        6946
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2797": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2799": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2800": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "offset": [
        6907,
        6946
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2809": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2810": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2812": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2814": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2815": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2816": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2817": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "2819": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2821": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2822": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2823": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2824": {
      "op": "PUSH6",
      "value": "0x35B2B2B832B9"
    },
    "2831": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2833": {
      "op": "SHL"
    },
    "2834": {
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "2836": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2837": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2838": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2839": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2840": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2841": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2842": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2843": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2844": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SUB",
      "path": "24"
    },
    "2845": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "2847": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2848": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2849": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "REVERT",
      "path": "24"
    },
    "2850": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2851": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6010,
        6054
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 13,
      "value": "0xB4C"
    },
    "2854": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6026,
        6040
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2855": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6042,
        6053
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "2888": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6010,
        6025
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEF6"
    },
    "2891": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "i",
      "offset": [
        6010,
        6054
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2892": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6010,
        6054
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2893": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6077
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 14,
      "value": "0x0"
    },
    "2895": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2896": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2897": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2899": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2900": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2901": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2902": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2903": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "2907": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "AND",
      "path": "24"
    },
    "2908": {
      "op": "PUSH3",
      "value": "0xFFFFFF"
    },
    "2912": {
      "op": "NOT"
    },
    "2913": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2914": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "2915": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "AND",
      "path": "24"
    },
    "2916": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2917": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2918": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "2919": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "OR",
      "path": "24"
    },
    "2920": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "2921": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        6064,
        6094
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "2922": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        5932,
        6101
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2923": {
      "offset": [
        1492,
        1518
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2924": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "2926": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2927": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "2929": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "2930": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1492,
        1518
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2931": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1492,
        1518
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2932": {
      "offset": [
        1624,
        1645
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2933": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1624,
        1645
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2935": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1624,
        1645
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2942": {
      "op": "SHL"
    },
    "2943": {
      "op": "SUB"
    },
    "2944": {
      "offset": [
        1624,
        1645
      ],
      "op": "AND",
      "path": "24"
    },
    "2945": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "offset": [
        1624,
        1645
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2946": {
      "fn": "DynamicRangesStrategy.setBaseThreshold",
      "jump": "o",
      "offset": [
        1624,
        1645
      ],
      "op": "JUMP",
      "path": "24"
    },
    "2947": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "2948": {
      "offset": [
        6929,
        6935
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x1"
    },
    "2950": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6929,
        6935
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2957": {
      "op": "SHL"
    },
    "2958": {
      "op": "SUB"
    },
    "2959": {
      "offset": [
        6929,
        6935
      ],
      "op": "AND",
      "path": "24"
    },
    "2960": {
      "offset": [
        6915,
        6925
      ],
      "op": "CALLER",
      "path": "24"
    },
    "2961": {
      "offset": [
        6915,
        6935
      ],
      "op": "EQ",
      "path": "24"
    },
    "2962": {
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xBCB"
    },
    "2965": {
      "offset": [
        6907,
        6946
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "2966": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "2968": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP1",
      "path": "24"
    },
    "2969": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "2970": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "offset": [
        6907,
        6946
      ],
      "op": "DUP2",
      "path": "24"
    },
    "2978": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2979": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "2981": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "2983": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2984": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2985": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2986": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x6"
    },
    "2988": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "2990": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "2991": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "2992": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "2993": {
      "op": "PUSH6",
      "value": "0x35B2B2B832B9"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "3002": {
      "op": "SHL"
    },
    "3003": {
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "3005": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3006": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "3007": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3008": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3009": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3010": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3011": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3012": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3013": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SUB",
      "path": "24"
    },
    "3014": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "3016": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "ADD",
      "path": "24"
    },
    "3017": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3018": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3019": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6907,
        6946
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3020": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6187,
        6232
      ],
      "op": "PUSH2",
      "path": "24",
      "statement": 15,
      "value": "0xBF5"
    },
    "3023": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6203,
        6218
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3024": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6220,
        6231
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3057": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6187,
        6202
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEF6"
    },
    "3060": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "jump": "i",
      "offset": [
        6187,
        6232
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3061": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6187,
        6232
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3062": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6256
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 16,
      "value": "0x0"
    },
    "3064": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3065": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3066": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3068": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3069": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3070": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3071": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3072": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH3",
      "path": "24",
      "value": "0xFFFFFF"
    },
    "3076": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "AND",
      "path": "24"
    },
    "3077": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x1000000"
    },
    "3082": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "MUL",
      "path": "24"
    },
    "3083": {
      "op": "PUSH6",
      "value": "0xFFFFFF000000"
    },
    "3090": {
      "op": "NOT"
    },
    "3091": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3092": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3093": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "AND",
      "path": "24"
    },
    "3094": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3095": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3096": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3097": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "OR",
      "path": "24"
    },
    "3098": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3099": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "offset": [
        6242,
        6274
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3100": {
      "fn": "DynamicRangesStrategy.setLimitThreshold",
      "jump": "o",
      "offset": [
        6107,
        6281
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3101": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3102": {
      "offset": [
        6769,
        6774
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3141": {
      "op": "SHL"
    },
    "3142": {
      "op": "SUB"
    },
    "3143": {
      "offset": [
        6769,
        6785
      ],
      "op": "AND",
      "path": "24"
    },
    "3144": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6785
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x5AA6E675"
    },
    "3149": {
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3151": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3152": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3153": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3158": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "3159": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3161": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "SHL",
      "path": "24"
    },
    "3162": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3163": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3164": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3166": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ADD",
      "path": "24"
    },
    "3167": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3169": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3171": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3172": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3173": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3174": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "SUB",
      "path": "24"
    },
    "3175": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3176": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP7",
      "path": "24"
    },
    "3177": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3178": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "3179": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3180": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3181": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3182": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC76"
    },
    "3185": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3186": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3188": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3189": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3190": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3191": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "3192": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "GAS",
      "path": "24"
    },
    "3193": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "3194": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3195": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3196": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3197": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xC8A"
    },
    "3200": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3201": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3202": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3204": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3205": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3206": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3207": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3209": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3210": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3211": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "3212": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "3213": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "3214": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "POP",
      "path": "24"
    },
    "3215": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3217": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3218": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3219": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3221": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3222": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "LT",
      "path": "24"
    },
    "3223": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3224": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCA0"
    },
    "3227": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3228": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3230": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3231": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3232": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6769,
        6787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3233": {
      "op": "POP"
    },
    "3234": {
      "offset": [
        6769,
        6787
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "offset": [
        6755,
        6787
      ],
      "op": "AND",
      "path": "24"
    },
    "3244": {
      "offset": [
        6755,
        6765
      ],
      "op": "CALLER",
      "path": "24"
    },
    "3245": {
      "offset": [
        6755,
        6787
      ],
      "op": "EQ",
      "path": "24"
    },
    "3246": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xCEB"
    },
    "3249": {
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3250": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3252": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3253": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3260": {
      "op": "SHL"
    },
    "3261": {
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3262": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3263": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3265": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3267": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3268": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "3269": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3270": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xA"
    },
    "3272": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "3274": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3275": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "3276": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3277": {
      "op": "PUSH10",
      "value": "0x676F7665726E616E6365"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "3290": {
      "op": "SHL"
    },
    "3291": {
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "3293": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3294": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "3295": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3296": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3297": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3298": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3299": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3300": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3301": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SUB",
      "path": "24"
    },
    "3302": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "3304": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "ADD",
      "path": "24"
    },
    "3305": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3306": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3307": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6747,
        6802
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3308": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6589,
        6590
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 17,
      "value": "0x0"
    },
    "3310": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6573,
        6586
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3311": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3316": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "AND",
      "path": "24"
    },
    "3317": {
      "branch": 32,
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6573,
        6590
      ],
      "op": "GT",
      "path": "24"
    },
    "3318": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xD35"
    },
    "3321": {
      "branch": 32,
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3322": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3324": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3325": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3326": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3332": {
      "op": "SHL"
    },
    "3333": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3334": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3335": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3337": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3339": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3340": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "24"
    },
    "3341": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3342": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xC"
    },
    "3344": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "3346": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3347": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "24"
    },
    "3348": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3349": {
      "op": "PUSH12",
      "value": "0x3A3BB0B8223AB930BA34B7B7"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "3367": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3368": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "24"
    },
    "3369": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3370": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3371": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3372": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3373": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3374": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3375": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SUB",
      "path": "24"
    },
    "3376": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "3378": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "ADD",
      "path": "24"
    },
    "3379": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3380": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3381": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6565,
        6607
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3382": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6629
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 18,
      "value": "0x0"
    },
    "3384": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3385": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3386": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3391": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3392": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3393": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "AND",
      "path": "24"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "3398": {
      "op": "SHL"
    },
    "3399": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "MUL",
      "path": "24"
    },
    "3400": {
      "op": "PUSH13",
      "value": "0xFFFFFFFF000000000000000000"
    },
    "3414": {
      "op": "NOT"
    },
    "3415": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3416": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3417": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "AND",
      "path": "24"
    },
    "3418": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3419": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3420": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3421": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "OR",
      "path": "24"
    },
    "3422": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3423": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        6617,
        6645
      ],
      "op": "SSTORE",
      "path": "24"
    },
    "3424": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        6484,
        6652
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3425": {
      "offset": [
        1451,
        1485
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3426": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        1451,
        1485
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3459": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "offset": [
        1451,
        1485
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3460": {
      "fn": "DynamicRangesStrategy.setTwapDuration",
      "jump": "o",
      "offset": [
        1451,
        1485
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3461": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4658,
        4760
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3462": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4698,
        4708
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3464": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4745
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 19,
      "value": "0x0"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3503": {
      "op": "SHL"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4751
      ],
      "op": "AND",
      "path": "24"
    },
    "3506": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4751
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0x3850C7BD"
    },
    "3511": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3513": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3514": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3515": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH4",
      "path": "24",
      "value": "0xFFFFFFFF"
    },
    "3520": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "AND",
      "path": "24"
    },
    "3521": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3523": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "SHL",
      "path": "24"
    },
    "3524": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3525": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3526": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3528": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ADD",
      "path": "24"
    },
    "3529": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3531": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3533": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3534": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3535": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3536": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "SUB",
      "path": "24"
    },
    "3537": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3538": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP7",
      "path": "24"
    },
    "3539": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3540": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "EXTCODESIZE",
      "path": "24"
    },
    "3541": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3542": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3543": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3544": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDE0"
    },
    "3547": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3548": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3550": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3551": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3552": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3553": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "POP",
      "path": "24"
    },
    "3554": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "GAS",
      "path": "24"
    },
    "3555": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "STATICCALL",
      "path": "24"
    },
    "3556": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3557": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3558": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3559": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xDF4"
    },
    "3562": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3563": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3564": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3566": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3567": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "RETURNDATACOPY",
      "path": "24"
    },
    "3568": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3569": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3571": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3572": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3573": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "POP",
      "path": "24"
    },
    "3574": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "POP",
      "path": "24"
    },
    "3575": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "POP",
      "path": "24"
    },
    "3576": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "POP",
      "path": "24"
    },
    "3577": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3579": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3580": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "RETURNDATASIZE",
      "path": "24"
    },
    "3581": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xE0"
    },
    "3583": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3584": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "LT",
      "path": "24"
    },
    "3585": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3586": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE0A"
    },
    "3589": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3590": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3592": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3593": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3594": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3595": {
      "op": "POP"
    },
    "3596": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3598": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "ADD",
      "path": "24"
    },
    "3599": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3600": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4741,
        4753
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3601": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        4658,
        4760
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3602": {
      "op": "POP"
    },
    "3603": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        4658,
        4760
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3604": {
      "offset": [
        1557,
        1586
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3605": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3607": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "SLOAD",
      "path": "24"
    },
    "3608": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "PUSH7",
      "path": "24",
      "value": "0x1000000000000"
    },
    "3616": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3617": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "DIV",
      "path": "24"
    },
    "3618": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3620": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3621": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1557,
        1586
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3622": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1557,
        1586
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3623": {
      "offset": [
        1370,
        1403
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3624": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1370,
        1403
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3657": {
      "fn": "DynamicRangesStrategy.getTick",
      "offset": [
        1370,
        1403
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3658": {
      "fn": "DynamicRangesStrategy.getTick",
      "jump": "o",
      "offset": [
        1370,
        1403
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3659": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5327,
        5543
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3660": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5378,
        5383
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3662": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5395,
        5411
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3663": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5421,
        5432
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3696": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3698": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3699": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5418
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3700": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3702": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3703": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3704": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xE7D"
    },
    "3707": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3708": {
      "dev": "Division by zero",
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "INVALID",
      "path": "24"
    },
    "3709": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3710": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5414,
        5432
      ],
      "op": "SDIV",
      "path": "24"
    },
    "3711": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5395,
        5432
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3712": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5395,
        5432
      ],
      "op": "POP",
      "path": "24"
    },
    "3713": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5453,
        5454
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x0"
    },
    "3715": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5450
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3716": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5454
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3718": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5454
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3719": {
      "branch": 33,
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5454
      ],
      "op": "SLT",
      "path": "24"
    },
    "3720": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3721": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3722": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEC4"
    },
    "3725": {
      "branch": 33,
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3726": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "POP",
      "path": "24"
    },
    "3727": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5465,
        5476
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x0"
    },
    "3760": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3762": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3763": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5462
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3764": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3766": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3767": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3768": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xEBD"
    },
    "3771": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3772": {
      "dev": "Modulus by zero",
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "INVALID",
      "path": "24"
    },
    "3773": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3774": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5476
      ],
      "op": "SMOD",
      "path": "24"
    },
    "3775": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5481
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3777": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5481
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3778": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5481
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3779": {
      "branch": 34,
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5458,
        5481
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3780": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5446,
        5481
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3781": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5442,
        5495
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3782": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5442,
        5495
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xECE"
    },
    "3785": {
      "branch": 34,
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5442,
        5495
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3788": {
      "op": "NOT"
    },
    "3789": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5483,
        5495
      ],
      "op": "ADD",
      "path": "24",
      "statement": 20
    },
    "3790": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5442,
        5495
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3791": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5525,
        5536
      ],
      "op": "PUSH32",
      "path": "24",
      "statement": 21,
      "value": "0x0"
    },
    "3824": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5512,
        5536
      ],
      "op": "MUL",
      "path": "24"
    },
    "3825": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5512,
        5536
      ],
      "op": "SWAP3",
      "path": "24"
    },
    "3826": {
      "fn": "DynamicRangesStrategy._floor",
      "offset": [
        5327,
        5543
      ],
      "op": "SWAP2",
      "path": "24"
    },
    "3827": {
      "op": "POP"
    },
    "3828": {
      "op": "POP"
    },
    "3829": {
      "fn": "DynamicRangesStrategy._floor",
      "jump": "o",
      "offset": [
        5327,
        5543
      ],
      "op": "JUMP",
      "path": "24"
    },
    "3830": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5549,
        5827
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3831": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5655,
        5656
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 22,
      "value": "0x0"
    },
    "3833": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5643,
        5652
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3834": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5643,
        5656
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3836": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5643,
        5656
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3837": {
      "branch": 35,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5643,
        5656
      ],
      "op": "SGT",
      "path": "24"
    },
    "3838": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF3E"
    },
    "3841": {
      "branch": 35,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3842": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3844": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3845": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3854": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3855": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3857": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3859": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3860": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "ADD",
      "path": "24"
    },
    "3861": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3862": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0xD"
    },
    "3864": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "3866": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3867": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "ADD",
      "path": "24"
    },
    "3868": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3869": {
      "op": "PUSH13",
      "value": "0x7468726573686F6C64203E203"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x9C"
    },
    "3885": {
      "op": "SHL"
    },
    "3886": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "3888": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3889": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "ADD",
      "path": "24"
    },
    "3890": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3891": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3892": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3893": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3894": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3895": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3896": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "SUB",
      "path": "24"
    },
    "3897": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "3899": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "ADD",
      "path": "24"
    },
    "3900": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3901": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3902": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5635,
        5674
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3903": {
      "offset": [
        637,
        646
      ],
      "op": "PUSH3",
      "path": "19",
      "value": "0xD89E8"
    },
    "3907": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "PUSH1",
      "path": "24",
      "statement": 23,
      "value": "0x2"
    },
    "3909": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "DUP4",
      "path": "24"
    },
    "3910": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3911": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3912": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "SGT",
      "path": "24"
    },
    "3913": {
      "branch": 36,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5692,
        5722
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "3914": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF8F"
    },
    "3917": {
      "branch": 36,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3918": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "3920": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP1",
      "path": "24"
    },
    "3921": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3922": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3928": {
      "op": "SHL"
    },
    "3929": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3930": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3931": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "3933": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "3935": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3936": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "ADD",
      "path": "24"
    },
    "3937": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3938": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x12"
    },
    "3940": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "3942": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3943": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "ADD",
      "path": "24"
    },
    "3944": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3945": {
      "op": "PUSH18",
      "value": "0xE8D0E4CAE6D0DED8C840E8DEDE40D0D2CED"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "3966": {
      "op": "SHL"
    },
    "3967": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "3969": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3970": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "ADD",
      "path": "24"
    },
    "3971": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "3972": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3973": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "3974": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3975": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3976": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3977": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "SUB",
      "path": "24"
    },
    "3978": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "3980": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "ADD",
      "path": "24"
    },
    "3981": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "3982": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "REVERT",
      "path": "24"
    },
    "3983": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5684,
        5745
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3984": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5775,
        5787
      ],
      "op": "DUP1",
      "path": "24",
      "statement": 24
    },
    "3985": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3987": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3988": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5772
      ],
      "op": "DUP3",
      "path": "24"
    },
    "3989": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "3991": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "3992": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "DUP2",
      "path": "24"
    },
    "3993": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xF9E"
    },
    "3996": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "3997": {
      "dev": "Modulus by zero",
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "INVALID",
      "path": "24"
    },
    "3998": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "3999": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5787
      ],
      "op": "SMOD",
      "path": "24"
    },
    "4000": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5792
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x2"
    },
    "4002": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5792
      ],
      "op": "SIGNEXTEND",
      "path": "24"
    },
    "4003": {
      "branch": 37,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5763,
        5792
      ],
      "op": "ISZERO",
      "path": "24"
    },
    "4004": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH2",
      "path": "24",
      "value": "0xFF4"
    },
    "4007": {
      "branch": 37,
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "JUMPI",
      "path": "24"
    },
    "4008": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x40"
    },
    "4010": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP1",
      "path": "24"
    },
    "4011": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4020": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4021": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x20"
    },
    "4023": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x4"
    },
    "4025": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4026": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "ADD",
      "path": "24"
    },
    "4027": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4028": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x17"
    },
    "4030": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x24"
    },
    "4032": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4033": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "ADD",
      "path": "24"
    },
    "4034": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4035": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH32",
      "path": "24",
      "value": "0x7468726573686F6C642025207469636B53706163696E67000000000000000000"
    },
    "4068": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x44"
    },
    "4070": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP3",
      "path": "24"
    },
    "4071": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "ADD",
      "path": "24"
    },
    "4072": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MSTORE",
      "path": "24"
    },
    "4073": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4074": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "MLOAD",
      "path": "24"
    },
    "4075": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4076": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "DUP2",
      "path": "24"
    },
    "4077": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4078": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "SUB",
      "path": "24"
    },
    "4079": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "PUSH1",
      "path": "24",
      "value": "0x64"
    },
    "4081": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "ADD",
      "path": "24"
    },
    "4082": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "SWAP1",
      "path": "24"
    },
    "4083": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "REVERT",
      "path": "24"
    },
    "4084": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5755,
        5820
      ],
      "op": "JUMPDEST",
      "path": "24"
    },
    "4085": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5549,
        5827
      ],
      "op": "POP",
      "path": "24"
    },
    "4086": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "offset": [
        5549,
        5827
      ],
      "op": "POP",
      "path": "24"
    },
    "4087": {
      "fn": "DynamicRangesStrategy._checkThreshold",
      "jump": "o",
      "offset": [
        5549,
        5827
      ],
      "op": "JUMP",
      "path": "24"
    }
  },
  "sha1": "c7dcc03e602c46ac92f09fbdf73626890f484e38",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity 0.7.6;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\n\nimport \"./AlphaVault.sol\";\n\n/**\n * @title   Alpha Strategy\n * @notice  Rebalancing strategy for Alpha Vault that maintains the two\n *          following range orders:\n *\n *          1. Base order is placed between X - B and X + B + TS.\n *          2. Limit order is placed between X - L and X, or between X + TS\n *             and X + L + TS, depending on which token it holds more of.\n *\n *          where:\n *\n *              X = current tick rounded down to multiple of tick spacing\n *              TS = tick spacing\n *              B = base threshold\n *              L = limit threshold\n *\n *          Note that after these two orders, the vault should have deposited\n *          all its tokens and should only have a few wei left.\n *\n *          Because the limit order tries to sell whichever token the vault\n *          holds more of, the vault's holdings will have a tendency to get\n *          closer to a 1:1 balance. This enables it to continue providing\n *          liquidity without running out of inventory of either token, and\n *          achieves this without the need to swap directly on Uniswap and pay\n *          fees.\n */\ncontract DynamicRangesStrategy {\n    AlphaVault public immutable vault;\n    IUniswapV3Pool public immutable pool;\n    int24 public immutable tickSpacing;\n\n    int24 public baseThreshold;\n    int24 public limitThreshold;\n    int24 public maxTwapDeviation;\n    uint32 public twapDuration;\n    address public keeper;\n\n    uint256 public lastRebalance;\n    int24 public lastTick;\n\n    /**\n     * @param _vault Underlying Alpha Vault\n     * @param _baseThreshold Used to determine base order range\n     * @param _limitThreshold Used to determine limit order range\n     * @param _maxTwapDeviation Max deviation from TWAP during rebalance\n     * @param _twapDuration TWAP duration in seconds for rebalance check\n     * @param _keeper Account that can call `rebalance()`\n     */\n    constructor(\n        address _vault,\n        int24 _baseThreshold,\n        int24 _limitThreshold,\n        int24 _maxTwapDeviation,\n        uint32 _twapDuration,\n        address _keeper\n    ) {\n        IUniswapV3Pool _pool = AlphaVault(_vault).pool();\n        int24 _tickSpacing = _pool.tickSpacing();\n\n        vault = AlphaVault(_vault);\n        pool = _pool;\n        tickSpacing = _tickSpacing;\n\n        baseThreshold = _baseThreshold;\n        limitThreshold = _limitThreshold;\n        maxTwapDeviation = _maxTwapDeviation;\n        twapDuration = _twapDuration;\n        keeper = _keeper;\n\n        _checkThreshold(_baseThreshold, _tickSpacing);\n        _checkThreshold(_limitThreshold, _tickSpacing);\n        require(_maxTwapDeviation > 0, \"maxTwapDeviation\");\n        require(_twapDuration > 0, \"twapDuration\");\n\n        (, lastTick, , , , , ) = _pool.slot0();\n    }\n\n    /**\n     * @notice Calculates new ranges for orders and calls `vault.rebalance()`\n     * so that vault can update its positions. Can only be called by keeper.\n     */\n    function rebalance() external {\n        require(msg.sender == keeper, \"keeper\");\n\n        int24 _baseThreshold = baseThreshold;\n        int24 _limitThreshold = limitThreshold;\n\n        // Check price is not too close to min/max allowed by Uniswap. Price\n        // shouldn't be this extreme unless something was wrong with the pool.\n        int24 tick = getTick();\n        int24 maxThreshold =\n            _baseThreshold > _limitThreshold ? _baseThreshold : _limitThreshold;\n        require(tick > TickMath.MIN_TICK + maxThreshold + tickSpacing, \"tick too low\");\n        require(tick < TickMath.MAX_TICK - maxThreshold - tickSpacing, \"tick too high\");\n\n        // Check price has not moved a lot recently. This mitigates price\n        // manipulation during rebalance and also prevents placing orders\n        // when it's too volatile.\n        int24 twap = getTwap();\n        int24 deviation = tick > twap ? tick - twap : twap - tick;\n        require(deviation <= maxTwapDeviation, \"maxTwapDeviation\");\n\n        int24 tickFloor = _floor(tick);\n        int24 tickCeil = tickFloor + tickSpacing;\n\n        vault.rebalance(\n            0,\n            0,\n            tickFloor - _baseThreshold,\n            tickCeil + _baseThreshold,\n            tickFloor - _limitThreshold,\n            tickFloor,\n            tickCeil,\n            tickCeil + _limitThreshold\n        );\n\n        lastRebalance = block.timestamp;\n        lastTick = tick;\n    }\n\n    /// @dev Fetches current price in ticks from Uniswap pool.\n    function getTick() public view returns (int24 tick) {\n        (, tick, , , , , ) = pool.slot0();\n    }\n\n    /// @dev Fetches time-weighted average price in ticks from Uniswap pool.\n    function getTwap() public view returns (int24) {\n        uint32 _twapDuration = twapDuration;\n        uint32[] memory secondsAgo = new uint32[](2);\n        secondsAgo[0] = _twapDuration;\n        secondsAgo[1] = 0;\n\n        (int56[] memory tickCumulatives, ) = pool.observe(secondsAgo);\n        return int24((tickCumulatives[1] - tickCumulatives[0]) / _twapDuration);\n    }\n\n    /// @dev Rounds tick down towards negative infinity so that it's a multiple\n    /// of `tickSpacing`.\n    function _floor(int24 tick) internal view returns (int24) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--;\n        return compressed * tickSpacing;\n    }\n\n    function _checkThreshold(int24 threshold, int24 _tickSpacing) internal pure {\n        require(threshold > 0, \"threshold > 0\");\n        require(threshold <= TickMath.MAX_TICK, \"threshold too high\");\n        require(threshold % _tickSpacing == 0, \"threshold % tickSpacing\");\n    }\n\n    function setKeeper(address _keeper) external onlyGovernance {\n        keeper = _keeper;\n    }\n\n    function setBaseThreshold(int24 _baseThreshold) external onlyKeeper {\n        _checkThreshold(_baseThreshold, tickSpacing);\n        baseThreshold = _baseThreshold;\n    }\n\n    function setLimitThreshold(int24 _limitThreshold) external onlyKeeper {\n        _checkThreshold(_limitThreshold, tickSpacing);\n        limitThreshold = _limitThreshold;\n    }\n\n    function setMaxTwapDeviation(int24 _maxTwapDeviation) external onlyGovernance {\n        require(_maxTwapDeviation > 0, \"maxTwapDeviation\");\n        maxTwapDeviation = _maxTwapDeviation;\n    }\n\n    function setTwapDuration(uint32 _twapDuration) external onlyGovernance {\n        require(_twapDuration > 0, \"twapDuration\");\n        twapDuration = _twapDuration;\n    }\n\n    /// @dev Uses same governance as underlying vault.\n    modifier onlyGovernance {\n        require(msg.sender == vault.governance(), \"governance\");\n        _;\n    }\n\n    /// @dev Uses same keeper as underlying vault.\n    modifier onlyKeeper {\n        require(msg.sender == keeper, \"keeper\");\n        _;\n    }\n}\n",
  "sourceMap": "1333:5633:24:-:0;;;2108:867;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2108:867:24;;;;;;;;;;;;;;;;;;;;;;;;;2332:25;;-1:-1:-1;;;2332:25:24;;;;2108:867;;;;;;;;;;;2309:20;;-1:-1:-1;;;;;2332:23:24;;;;;:25;;;;;2108:867;2332:25;;;;;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2332:25:24;2388:19;;;-1:-1:-1;;;2388:19:24;;;;2332:25;;-1:-1:-1;2367:18:24;;-1:-1:-1;;;;;2388:17:24;;;;;:19;;;;;2332:25;;2388:19;;;;;;;:17;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:40;;2437:6;-1:-1:-1;;;;;2418:26:24;;;-1:-1:-1;;;;;2418:26:24;;;;;;;2461:5;-1:-1:-1;;;;;2454:12:24;;;-1:-1:-1;;;;;2454:12:24;;;;;;;2490;2476:26;;;;;;;;;;;;2529:14;2513:13;;:30;;;;;;;;;;;;;;;;;;;;2570:15;2553:14;;:32;;;;;;;;;;;;;;;;;;;;2614:17;2595:16;;:36;;;;;;;;;;;;;;;;;;;;2656:13;2641:12;;:28;;;;;;;;;;;;;;;;;;2688:7;2679:6;;:16;;;;;-1:-1:-1;;;;;2679:16:24;;;;;-1:-1:-1;;;;;2679:16:24;;;;;;2706:45;2722:14;2738:12;2706:15;;;:45;;:::i;:::-;2761:46;2777:15;2794:12;2761:15;:46::i;:::-;2845:1;2825:17;:21;;;2817:50;;;;;-1:-1:-1;;;2817:50:24;;;;;;;;;;;;-1:-1:-1;;;2817:50:24;;;;;;;;;;;;;;;2901:1;2885:13;:17;;;2877:42;;;;;-1:-1:-1;;;2877:42:24;;;;;;;;;;;;-1:-1:-1;;;2877:42:24;;;;;;;;;;;;;;;2955:5;-1:-1:-1;;;;;2955:11:24;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2955:13:24;;;2933:8;2930:38;;;;;;;;;-1:-1:-1;;2930:38:24;;;;;;;;;-1:-1:-1;1333:5633:24;;-1:-1:-1;;;;;;;1333:5633:24;5549:278;5655:1;5643:9;:13;;;5635:39;;;;;-1:-1:-1;;;5635:39:24;;;;;;;;;;;;-1:-1:-1;;;5635:39:24;;;;;;;;;;;;;;;637:9:19;5692:30:24;;;;;;5684:61;;;;;-1:-1:-1;;;5684:61:24;;;;;;;;;;;;-1:-1:-1;;;5684:61:24;;;;;;;;;;;;;;;5775:12;5763:24;;:9;:24;;;;;;;;:29;;;5755:65;;;;;-1:-1:-1;;;5755:65:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;5549:278;;:::o;1333:5633::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/DynamicRangesStrategy.sol",
  "type": "contract"
}